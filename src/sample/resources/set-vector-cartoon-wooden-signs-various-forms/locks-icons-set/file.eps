%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Alvaro Cabrera Jim\616nez) ()%%Title: (2976CANDADOS-2.eps)%%CreationDate: 01/07/13 18:30%%Canvassize: 16383%%BoundingBox: 0 0 3969 3969%%HiResBoundingBox: 0 0 3968.5 3968.5%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registro])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1984.5 1984 1984.5 1984%AI3_TileBox: 1704.75 1604.25 2263.75 2387.25%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 3968.5 3968.5%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -5256 5127.5 0.125 1908 967 18 0 0 6 107 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 25840 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD64FF7DF827F827F827F827F827F827F827F827F827F827F827F8%27F827F8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA9FF5227F827F827F827F827F827F827F827%F827F827F827F827F827F827FD64FF7DF827F827F827F8272752F827F827%F852527D5227F827F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A8A8FFFFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5227F827F827F8277D%7D5227F827F859A87D527D7D27F827F827F827FD0FFFA8AFA8FD0FFF5227%F82752A8FD2AFF7D7D53A8FD0FFF7DF827F827F828A87DF827F827F852A8%27F827F8527E27F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFFFA82727F827%52FFFFFFA8FFA8FFA8FFA8FFFFFF2727F827F827F8A8FFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD04FFA8272727A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FF5227F827F87DFFFFA8FFA8FFA8FFA8FFA8FFA8FF5227F827F8277D7DF8%27F827F8277D53F827F827F87D5227F827F827FD0CFFA8F8272752F82727%FD0BFF272727A8FFFF522727FD12FFA8F8275352F8A8FD0EFF522752FFA8%52F8FD0EFF7DF827F82727A8F827F827F827F8A82727F827F827527DF827%F827F8A8FFA8FFA8FFA8FFA8FFA8FFF82752FFA8A8272752FFA8FFA8FFA8%FFA8FF272727A8FD04FF27277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%5227A8FFA827F8FFFFFFA8FFA8FFA8FFA8FFA8FF842752FFFFFF7D277DFF%A8FFA8FFA8FFA8FFA8FFA8FF5227F827F8527D27F827F827F8527D27F827%F827F8277D27F827F827FD0BFF7D2727FD04FFA8F852FD09FF5227FD06FF%52F8A8FD11FF5227FFFFFF5227FD0EFFA8FD04FF7DF8A8FD0DFF7DF827F8%27527DF827F827F827527DF827F827F82727A82727F827F8A8FFA8FFA8FF%A8FFA8FFFF7DF852FFFFA8FFA827F8FFFFFFA8FFA8FFA8FFA8FD07FFF827%7DFFFFFFA8FFFFFFA8FFFFFFA8FD05FF2752A8FFFF7DF8FFFFFFA8FFFFFF%A8FFA8FFA8FFA8FFA8FFFF7DF852FFFFA8FFA8FFA8FFA8FFA8FFA9FF5227%F827F8527D27F827F827F87D5227F827F827F8277D27F827F827FD0BFF7D%2752FD05FFF827A8FD0FFF272728FD0FFFA85227272752275227272752A8%FD07FFA852275227522752F8272752A8FD0CFF7DF827F82727A8F827F827%F8277D52F827F827F827527DF827F827F8A8FFA8FFA8FFA8FFFFA82752F8%527DA8A8A87D27275252FFA8FFA87D277D7DA884A8A8A82727F8277DFFA8%FFFFFFA8FFFFFFA8FD04FF52F827F827F827F827F827F827A8FFA8FFA8FF%FF52F827F827F827F827F827F827A8FFA8FFA8FFA8FFA8FFA8FF5227F827%F8277D52F827F827277DF827F827F827F87D5227F827F827FD09FF7D27F8%27F827F827F8270027F827A8FFFFFF2727F827F827F827F827F827F852FD%0EFF5227F827F827F827F827F82727FD07FF5227F827F827F827F827F827%27FD0CFF7DF827F827F852A827F827F8A852270027F827F87D7D27F827F8%27F8A8FFA8FFA8FFA8FFFF7DF827F827F827F827F827F827F8A8FFFFA852%F827F827F827F827F827F82752FD05FFA8FFFFFFA8FD04FF52F827F827F8%27F827F827F827A8FFA8FD04FF52F827F827F827F827F827F827A8FFA8FF%A8FFA8FFA8FFA8FF5227F827F827F87D847D52A85227F827F827277D7D27%F827F827F827FD09FF7D27F827F827277D2727F827F827A8FFFFFF2727F8%27F8275252F827F827F852FD0EFF5227F827F852847DF827F82727FD07FF%5227F827F852A87DF827F82727FD0CFF7DF827F827F827F82752522727F8%27F8277D7D5227F827F827F827F8A8FFA8FFA8FFA8FFFF7DF827F82727FF%FFA8F827F827F8A8A8FFA852F827F82752FFFF52F827F82752FFFFFFA8FF%FFFFA8FFFFFFA8FFFF52F827F82752FFA827F827F827A8FFA8FFA8FFFF52%F827F8277DFFA827F827F827A8FFA8FFA8FFA8FFA8FFA8FF5227F827F827%F827F827F827F827F827F827F827F827F827F827F827FD09FF7D27F827F8%27FFFF7D27F827F827A8FFFFFF2727F827F87DFFFF5227F827F87DFD0EFF%5227F827F852FFA8F827F82727FD07FF5227F827F87DFFA8F827F82727FD%0CFF7DF827F827F8FD107D52F827F827F8A8FFA8FFA8FFA8FFFF7DF827F8%27F8A8FF52F827F827F8A8FFFFFF52F827F82727FFFF27F827F82752FD0E%FF52F827F82752FFA827F827F827A8FFFFFFA8FFFF52F827F82752FF7D27%F827F827A8FFA8FFA8FFA8FFA8FFA9FF5227F827F8272752275227522752%2752275227277DFF2827F827F827FD09FF7D27F827F82784FF5227F827F8%27A8FFFFFF2727F827F852A8A82727F827F852FD0EFF5227F827F8275252%F827F82727FD07FF5227F827F8525252F827F82727FD0CFF7DF827F827F8%27F827F827F827F827F827F8277DA827270027F827F8A8FFA8FFA8FFA8FF%FF7DF827F827F827F827F827F827F8A8FFFFA852F827F827F827F827F827%F82752FFA8FFFFFFA8FFFFFFA8FD04FF52F827F827F827F827F827F827A8%FFA8FFFFFFA852F827F827F827F827F827F827A8FFA8FFA8FFA8FFA8FFA8%FF5227F827F827F827F827F827F827F827F8527D7DF827F827F827F827FD%09FF7D27F827F827F827F827F827F827A8FFFFFF2727F827F827F827F827%F827F852FD0EFF5227F827F827F827F827F82727FD07FF5227F827F827F8%27F827F82727FD0CFF7DF827F827F827F827F827F827F827F87DA852F827%F827F827F827F8A8FFA8FFA8FFA8FFFF7DF827F827F827F827F827F82700%FD04FF52F827F827F827F827F827F82752FD0EFF7DF827F827F827F827F8%27F87DFD07FF7DF827F827F827F827F827F852FFFFA8FFA8FFA8FFA8FFA8%FF5227F827F827F827F827F827F82727A87D27F827F827F827F827F827FD%0AFFA87DA87DA87DA87DA87DA87DA8FD04FFA8A87DA87DA87DA87DA87DA8%7DFD10FFA87DA87DA87DA87DA87DA8FD09FFA87DA87DA87DA87DA87DA8A8%FD0CFF7DF827F827F827F827F827F82752A85227F827F827F827F827F827%F8A8FFA8FFA8FFA8FFA8FD0FFFA8FD13FFA8FFFFFFA8FFFFFFA8FD0FFFA8%FFFFFFA8FD0FFFA8FFA8FFA8FFA8FFA8FFA8FF5227F827F827F827F827F8%277DA8F827F827F827F827F827F827F827FD64FF7DF827F827F827F827F8%52A87DF827F827F827F827F827F827F827F8A8FFA8FFA8FFA8FFA8FFA8FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FD37FFA8FD07FFA8FFA9FFA8FFA8FFA8FF%A9FF5227F827F827F827F87D7D27F827F827F827F827F827F827F827F827%FD53FFA8FD10FF7DF827F827F82727A87D27F827F827F827F827F827F827%F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA852F827F852A8FFA8FFA8FFA8%FFA8FFA8FFA8FF5227F827F82752A852FD0D27F827F827F827FD20FFA852%2727527DFD15FF7D5227527DFD0FFF8427F8272727F827A8FD0CFF7DF827%F827F884FD0F7D52F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFFFFF7D5252%527DFD0CFFA8F827F827F82752FD13FF2727F827F82727A9FD0CFF7D27F8%52A8FFA828F852FFFFA8FFFFFFA8FFA8FFA8FF5227F827F827F827F827F8%27F827F827F827F827F827F827F827F827FD0CFFA82727F827F82752FD0A%FFA8F82752A8A87DF82752FD11FF5227F8A8A8A8272728FD0BFF7D27F87D%FD04FFA827F8FD0CFF7DF827F827F827F827F82752FD057D5227F827F827%F827F827F8A8FFA8FFA8FFA8FFA8FFFFFF2727277D7D59F82752FFFFFFA8%FD05FF522727FD04FF7DF827A8FD0FFFA827F8A8FFFFFFA8F82784FFA8FF%FFFFA8FD04FFA8F87DFD04FFA8FF21277DFFA8FFA8FFA8FFA8FFA8FF5227%F827F827F827F87D7D7D52522752527D7D52F827F827F827F827FD0BFF7D%2727FD04FF7DF827FD0AFF7DFD06FF27F8FD10FFA8F827FD05FF52F8A8FD%12FFA827F8FD0CFF7DF827F827002727A87D27F827F827F827F8527D84F8%27F827F827F8A8FFA8FFA8FFA8FFA8FFFF7DF87DFFFFA8FFA827F8A8FD0F%FFA8F827A8FD0FFFA82727FD05FF52277DFD11FFA827F852FD04FFA8FFFF%FFA8FFA8FF5227F827F827F8A85227F827F827F827F827F8277D7DF827F8%27F827FD0BFF7D277DFD05FF2727A8FD0FFF522752FD10FF7DF827537D52%7D7D28F87DFD09FF7D527D537D527D7D27F827A8FD0CFF7DF827F827F87D%7D27F827F827F827F827F827F8277D52F827F827F8A8FFA8FFA8FFA8FFFF%FF7D52F8527DA87DA87D27F87DA8FD04FFA87DA87DA87DA87DA85227F853%A8FD0EFF7DF827F827F827F827F827F852FFFFA8FD04FF52F827F827F827%F827F827F87DFFFFA8FFA8FFA8FFA8FFA8FF5227F827F8277D27F827F827%F827F827F827F827F8525227F827F827FD09FF7D27F827F827F827F827F8%27F852FD04FF5227F827F827F827F827F827F87DFD0EFF5227F827F827F8%27F827F82727FD07FF2727F827F827F827F827F82752FD0CFF7DF827F827%27A8F827F827F827F827F827F827F82727A8F827F827F8A8FFA8FFA8FFA8%FFFF7DF827F827F87D7D52F827F82727FD04FF52F827F827277D5227F827%F82752FD0EFF52F827F827F827F827F827F827FD06FFA827F827F827F827%F827F827F852FFFFA8FFFFFFA8FFFFFFA8FF5227F827F8527D27F827F827%F827F827F827F827F8277D27F827F827FD09FF7D27F827F87DFFFFFF52F8%27F852FD04FF5227F827F8AFFFFF7D27F827F87DFD0EFF5227F827F82752%27F827F82727FD07FF2727F827F8275227F827F82752FD0CFF7DF827F827%527DF827F827F827F827F827F827F8272784F827F827F8A8FFA8FFA8FFA8%FFFFA8F827F8277DFFFFFF5227F82727FD04FF52F827F827A8FFFFFFF827%F82752FD0EFF52F827F82752FF7D27F827F827A8FD05FFA827F827F82752%FF7D27F827F852FD04FFA8FFA8FFA8FFA8FF5227F827F8277D27F827F827%F827F827F827F827F8527D27F827F827FD09FF7D27F827F852FFFFA827F8%27F852FD04FF5227F827F8A8FFFF7D27F827F87DFD0EFF5227F827F8A8FF%FF2727F82727FD07FF2727F827F8A8FFFFF827F82752FD0CFF7DF827F827%F8A82727F827F827F827F827F827F8277D7DF827F827F8A8FFA8FFA8FD04%FFA8F827F827F8FFFF7DF827F82727FD04FF52F827F82752FFFF52F827F8%2752FD0EFF52F827F8277DFFFF27F827F827A8FD06FF27F827F8277DFFA8%27F827F852FD04FFA8FFFFFFA8FFFFFF5227F827F82752A8F827F827F827%F827F827F82727A8F827F827F827FD09FF7D27F827F852FFFF8427F827F8%52FD04FF5227F827F87DFFFF5227F827F87DFD0EFF5227F827F8277D52F8%27F82727FD07FF2727F827F8277D52F827F82752FD0CFF7DF827F827F827%7D7DF827F827F827F827F82727A85227F827F827F8A8FFA8FFA8FFA8FFFF%7DF827F82727FFFFA8F827F82727FD04FF52F827F8277DFFFF7DF827F827%52FD0EFF52F827F827F827F827F827F827A8FD05FFA827F827F827F827F8%27F827F852FFFFA8FFFFFFA8FFA8FFA8FF5227F827F827F8277DA82727F8%27F827F82752A85227F827F827F827FD09FF7D27F827F852A8A88427F827%F852FD04FF5227F827F87DA8FF5327F827F87DFD0EFF5227F827F827F827%F827F82727FD07FF2727F827F827F827F827F82752FD0CFF7DF827F827F8%27F82752A8FD057D847D7D2727F827F827F827F8A8FFA8FFFFFFA8FFFF7D%F827F827F827F827F827F82727FD04FF52F827F827F827F827F827F82752%FD0EFF7DF827F827F827F827F827F852FD07FF52F827F827F827F827F827%F87DFFFFA8FFFFFFA8FFFFFFA8FF5227F827F827F827F827F82752525253%2727F827F827F827F827F827FD09FFA8FD0C527DFD04FF7DFD0852535252%52A8FD0FFF7D5252525352525253527DA8FD07FFA87D52525253FD05527D%A8FD0CFF7DF827F827F827F827277D2727F827F87D7D52F827F827F827F8%27F8A8FFA8FFA8FFA8FFA8FD4FFFA8FFFFFFA8FFFFFFA8FFA8FF5227F827%F827F82752A85227F827F827277D7D7DF827F827F827F827FD64FF7DF827%F827F8277DA82727F827F827F827F82752A82727F827F827F8A8FFFFFFA8%FFFFFFA8FD53FFA8FFFFFFA8FFFFFF5227F827F82752A8F827F827F827F8%27F827F82752A8F827F827F827FD64FF7DF827F827F8A82827F827F827F8%27F827F827F8277D59F827F827F8A8FFA8FFA8FFA8FFFFFFA8FD17FFA8A8%A8FD2DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FF5227F827F8277D27%F827F827F827F827F827F827F8527D27F827F827FD0EFFA87D7D7DFD0EFF%A82727F82727A8FD14FFA8A87DA8A8FD0FFFA87D275252A8FD0FFF7DF827%F827527DF827F827F827F827F827F827F82727A8F827F827F8A9FFA8FFFF%FFA8FFFFFFA8FFA827F827F827F87DFD0BFF7DF827F827F827F87EFD12FF%5227F827F82752FD0DFF7D27F827F827F87DFD08FFA8FFFFFFA8FF5227F8%27F8527D27F827F827F827F827F827F827F8277D27F827F827FD0BFFA827%F827527D2727F87DFD09FFA8F82727A8A8A82727F8AFFD10FF5227F827F8%27F82752FD0BFF7D27F8272727F827F87DFD0DFF7DF827F827277DF827F8%27F827F827F827F827F8272784F827F827F8A8FFA8FFA8FFA8FFA8FFFF52%F8277DFFFFFF5227F8A8FD08FF272727FD05FF272752FD0FFF7D27F82752%A87D27F8277DFD09FFA827F82752FFA87DF827F8A8FD04FFA8FFFFFFA8FF%A8FF5227F827F8277D27F827F827F827F827F827F827F8527D27F827F827%FD0BFF27277DFD05FF27277DFD09FF52A8FD05FF7DF852FD0FFF7DF8277D%FFFFFFA827F852FD0AFFA87D52FD04FFA8F8277DFD0CFF7DF827F827F87D%7D27F827F827F827F827F827F8277E52F827F827F8A8FFFFFFA8FFFFFFA8%FFA827F8A8FD05FF52F87DFD10FF522727FD0FFFF827F8FD05FF2727F8A8%FD10FFA827F852FD08FFA8FFFFFF5227F827F827F8A85227F827F827F827%F827F8277D7DF827F827F827FD0BFFF8277DFFA8A8A8FF522752FD0BFFA8%A8A8FFA827F87DFD0FFF7D5284FD05FFA8527DA8FD10FFAF5252A8FD0CFF%7DF827F827F82727A85227F827F827F827F8277DA8F827F827F827F8A8FF%A8FFA8FFA8FFFFFFA827F828F827F8272727F87DFD08FF7D52F827F82752%52F827A8FD0EFF7D5252527DFFFFFFA8527D527DA8FD06FF7D2852277DFF%FFFFA82752527DA8FFA8FFFFFFA8FFFFFFA8FF5227F827F827F827F87D7D%7D27272127527D7D7DF827F827F827F827FD0BFF2727F827F827F827F827%59FD07FF5227F827F827F827F8277DFD0EFFA9F827F827F8A8A8A82727F8%27F8A8FD06FFF827F827F87DA8A82827F827F8A8FD0BFF7DF827F827F827%F827F8527D847DA87D7D5227F827F827F827F827F8FFFFA8FFFFFFA8FFFF%FF7D27F827F827F827F827F827A8FD05FF5227F827F827F827F827F87DFD%0EFF7D27F827F827F827F827F827F8277DFD05FF7E27F827F827F827F827%F827F8277DFD05FFA8FFFFFFA8FF5227F827F827F827F827F827F827F827%F827F827F827F827F827F827FD09FFA927F827F827F827F827F827F87DFD%04FF7D27F827F827F827F827F827F8A8FD0DFFA8F827F827F827F827F827%F827F87DFD05FFA8F827F827F827F827F827F827F87DFD0BFF7DF827F827%F8FD107D52F827F827F8A8FFA8FFA8FD04FF7DF827F827F87DA852F827F8%2727FD04FF52F827F827F8A87D27F827F82752FD0DFF7D27F827F827F827%F827F827F8277DFD05FF7D27F827F827F8270027F827F82752FFFFFFA8FF%FFFFA8FFFFFF5227F827F8FD1127F827F827F827FD09FF5227F827F827A8%FF5227F827F827A8FFFFFF2727F827F827FFFF2727F827F852FD0DFFA8F8%27F827F87DFFFF2727F827F8A8FD05FFA8F827F827F87DFFFF5227F827F8%7DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F827F827F8%27F8A8FFFFFFA8FD04FF52F827F82727FFFFA8F827F827F8A8FFFFA927F8%27F82752FFFF59F827F82727FD0DFF7D27F827F8277DFFFF52F827F8277D%FD05FF7D27F827F82752FFFF53F827F82752FD07FFA8FFFFFF5227F827F8%27F827F827F827F827F827F827F827F827F827F827F827FD09FF5227F827%F852FFFFA827F827F827A8FFFFFF2727F827F87DFFFF7D27F827F852FD0D%FFA8F827F827F852FFA8F827F827F87DFD05FFA8F827F827F827FFFF2727%F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827F827%F827F827F8A8FFA8FFA8FFA8FFFF7DF827F827F87D7D52F827F82727FD04%FF52F827F827F87D7D27F827F82752FD0DFF7D27F827F82752FFA827F827%F8277DFD05FF7D27F827F82727FFA852F827F82752FFA8FFFFFFA8FFFFFF%A8FF5227F827F827F827F827F827F827F827F827F827F827F827F827F827%FD0AFF52F827F827F827F827F827F8A8FD04FFA827F8270027F827F827F8%27F8FD0EFFA8F827F827F82727272127F827F87DFD05FFA8F827F827F8FD%0527F827F87DFD0BFF7DF827F827F827F827F827F827F827F827F827F827%F8270027F827F8A9FFA8FFFFFFA8FFFFFF7D27F827F827F827F827F852FD%06FF5227F827F827F827F827F87DFD0EFFA827F827F827F827F827F827F8%27A8FD05FFA827F827F827F827F827F827F827A8FD05FFA8FFFFFFA8FF52%27F827F827F827F827F827F827F827F827F827F8272727F827F827FD0BFF%7D27F827F827F827F852FD08FF5327F827F827F827F87DFD10FF7D27F827%F827F827F827F82752FD07FF7D27F827F827F827F827F82752FD0CFF7DF8%27F827007D2727F827F827F827F827F827F827A852F827F827F8A8FFA8FF%A8FFFFFFA8FFFFFFA87D2727F827277DFD0AFF7D52F827F82752A8FD12FF%59522727F827F827F82752FD09FF7D522727F827F827F82752FD05FFA8FF%FFFFA8FFFFFF5227F827F82752A8F827F827F827F827F827F8287D52F827%F827F827FD0FFFA8FFA9FD0FFFA8FD1BFFA8FFA8FD11FFA8FFA8FD10FF7D%F827F827F82753A8F827F827F827F827F852A852F827F827F827F8A8FFFF%FFA8FFFFFFA8FD57FFA8FFFFFF5227F827F827F8277D7DF827F827F827F8%7DA827F827F827F827F827FD64FF7DF827F827F827F8277D7DF827F827F8%7D7D27F827F827F827F827F8A8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FD3FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FF5227F827F827F827%F8277D53F827F87D7D27F827F827F827F827F827FD64FF7DF827F827F827%F827F827A852F8A87D27F827F827F827F827F827F8A8FFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFA8FD11FFA8A8A8FD17FFA8A8A8FD13FFA8A8A8FD09FFA8%FFFFFFA8FF5227F827F827F827F827F827A8A85227F827F827F827F827F8%27F827FD0DFF7D52F8272752A8FD0CFFA82727F827277EFD13FFA85227F8%2727A8FD0FFF7D2727F82727A8FD0DFF7DF827F827F827F827F827F852A8%27F827F827F827F827F827F827F8A8FFA8FFA8FFA8FFA8FFFFFF5227F827%F827F8277DFD0AFF7DF827F827F827F87DFD11FFA8F827F827F827F87DFD%0AFFA8FFFF52F827F827F827F8A8FD04FFA8FFFFFFA8FFA8FF5227F827F8%27F827F827F827F8527D27F827F827F827F827F827F827FD0BFF7D27F852%A8FF7D27F827FD09FF7DF82727A8FFFF5227F8A8FD10FFF82727A8A8A828%27F8A8FD0BFF52F82752FFFFA8272727FD0CFF7DF827F827F827F827F827%F827F87D7D27F827F827F827F827F827F8A8FFA9FFA8FFFFFFA8FFFF28F8%52FD04FF8427F884FD06FFA87DF82727FD05FF272752FD0FFF5227F8A8FD%04FF272752FD09FFA852F82752FD04FFA8F8277DFFFFFFA8FFFFFFA8FFFF%FF5227F827F827527D527D5253527D52A87D525253527D2727F827F827FD%0BFF21277DFD05FF272752FD07FFF82752FD06FFA8F827FD0FFF52F852FD%05FF7DF827FD09FFA8F8277DFD06FF52F87DFD0BFF7DF827F827F87D7D7D%537D7D7D537D537D52FD047D52F827F827F8A8FFA8FFA8FFA8FFA8FFA827%F87EFD05FF52F87DFD07FFA852FD07FF522727FD0FFF522752FD05FF7D27%F8FD0AFF7D7DFFFFFFA8FFFFFF272752FFA8FFFFFFA8FFA8FFA8FF5227F8%27F827F827F827F827F827F8270027F827F827F827F827F827FD0BFF0027%A8FD05FF522752FD0FFFA827F87DFD0FFF52F87DFD05FFA8F827FD12FF7D%27F8A8FD0BFF7DF827F827F827F82752A82727F827277D7D7D2727F827F8%27F827F8A8FFA8FFFFFFA8FFFFFFA827F884A8A87DA8A852F87DFD08FFA8%A97D7D7DA8A827F827A8FD0FFF7D7DA8A87D7D7DA8A8A87DFD0BFFA8A87D%7D7DA8A8A87D7DFFFFA8FFFFFFA8FFFFFFA8FF5227F827F827F8277D7D27%27F827F827F82752A85227F827F827F827FD09FF7D52F827F827F827F827%F8272752A8FFFFFF52522727F827F827F827F827277DFD0DFFA8527D5227%F827F827F8272752287DFD05FFA852522727F827F827F8272752527DFD0B%FF7DF827F827F8277E7DF827F827F827F827F82727A85227F827F827F8A8%FFA8FFA8FFA8FFA827F827F827F827F827F827F827F87DFFFF7D27F827F8%27F827F827F827F827F8A9FD0CFF2727F827F827F8522727F827F82727FD%05FF5227F827F827F8522727F827F82727FFFFFFA8FFA8FFA8FFA8FF5227%F827F827537DF827F827F827F827F827F82700A82727F827F827FD09FF27%27F8270027F827F827F827F8277DFFFFA8F827F827F8272727F827F827F8%27A8FD0CFF7DF827F82721FFFFFF5227F827F852FD05FF7DF827F827F8AF%FFFF5227F827F852FD0BFF7DF827F82727A82727F827F827F827F827F827%F8277D7DF827F827F8A8FFA8FFA8FFFFFFA827F827F827F8A8FF7DF827F8%27F87DFFFF7D27F827F82727FFA852F827F827F8FD0DFF5227F827F852FF%FFFFA8F827F82727FD05FF5227F827F852FFFFFFA8F827F82727FFFFFFA8%FFFFFFA8FFFFFF5227F827F8527D27F827F827F827F827F827F827F8527D%27F827F827FD09FF2727F827F852FFFFA827F827F8277DFFFFA8F827F827%F87DFFFF7D27F827F827A8FD0CFF7DF827F82727FFFFFF5227F827F852FD%05FF7DF827F82727FFFFFF7D27F827F852FD0BFF7DF827F827527DF827F8%27F827F827F827F827F82727A82727F827F8A8FFA8FFA8FFA8FFA827F827%F827F8A8FF52F827F827F87DFFFF7D27F827F82700FFFF27F827F827F8A8%FD0CFF5227F827F8277DFFA827F827F82727FD05FF5227F827F8277DFFA8%27F827F82727FFA8FFA8FFA8FFA8FFA8FF5227F827F8527D27F827F827F8%27F827F827F827F8277D27F827F827FD09FF2727F827F827A8FF5227F827%F8277DFFFFA8F827F827F827FFFF2727F827F827A8FD0CFF7DF827F827F8%A8FFFF2727F827F852FD05FF7DF827F827F8A8FFFF2727F827F852FD0BFF%7DF827F82727A8F827F827F827F827F827F827F82727A8F827F827F8A8FF%A8FFA8FFA8FFA827F827F827F8FFFF7DF827F827F87DFFFF7D27F827F827%27FFFF52F827F827F8A8FD0CFF5227F827F827A8FFFF52F827F82727FD05%FF5227F827F827A8FFFF52F827F82727FD05FFA8FFA9FFA8FF5227F827F8%277D52F827F827F827F827F827F827F87D5227F827F827FD09FF2727F827%F8277DA85227F827F8277DFFFFA8F827F827F8527D7D2727F827F827A8FD%0CFF7DF827F827F8FFFFFF5227F827F852FD05FF7DF827F827F8FFFFFF52%27F827F852FD0BFF7DF827F827F8527D27F827F827F827F827F827F827A8%27F827F827F8A8FFA8FFA8FFA8FFA827F827F827F827F827F827F827F87D%FFFFA827F827F827F827F827F827F827F8A8FD0CFF5227F827F827F82727%27F827F82727FD05FF5227F827F827F8272727F827F82727FFFFFFA8FFA8%FFA8FFA8FF5227F827F827F87D7D27F827F827F827F827F8277D52F827F8%27F827FD09FF2727F827F827F827F827F827F8277DFFFFA8F827F827F827%F827F827F827F827A8FD0CFF7DF827F827F827F827F827F827F852FD05FF%7DF827F827F827F827F827F827F852FD0BFF7DF827F827F827F87EA852F8%27F827F827217DA87DF827F827F827F8A8FFA8FFA8FFA8FFA8A87D7D537D%5227F852527D7DA8A8FD04FFA87D7D535227272752527D7DA8A8FD0DFFA8%A87D7D525227272752527E84A8A8FD05FFA8A87D7D525227272752527D7D%A8A8FFFFFFA8FFA9FFA8FFA9FF5227F827F827F827F8527DA87D7D527D7D%A87D27F827F827F827F827FD51FFA8FD12FF7DF827F827F827F827F82727%FD0552F827F827F827F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FD17FFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%5227F827F827F827F8272752527D7D7D5252F827F827F827F827F827FD64%FF7DF827F827F827F8277DA87D592752527D7DA85227F827F827F827F8A8%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD3BFFA8FFFFFFA8%FFFFFFA8FFA8FFA8FFA8FFA8FF5227F827F827F8277D7DF827F827F827F8%2727A87D27F827F827F827FD64FF7DF827F827F8277E52F827F827F827F8%27F827F8A87D27F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FD05FF7D7D7DFFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFF7D7D7DA8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A87D527D7DFFFFFFA8FFA8FFA8FFA8FFA8FFA8FF5227F827F827537DF827%F827F827F827F827F827F8A82727F827F827FD0DFFA87D2752527DFD0DFF%7D0027F827F87DFD13FFA82727F827F852A8FD0DFF7D27F827F82727A8FD%0DFF7DF827F82727A82727F827F827F827F827F827F827527DF827F827F8%A8FFA8FFA8FFA8FFA8FFA8FF7D27F827F827F827A8FFFFFFA8FFFFFFA8FF%FF52F827F852F827F852FD11FF7DF827F827F827F827A8FD0BFF5327F827%F827F827F8A8FFFFA8FFA8FFA8FFA8FFA9FF5227F827F8527D27F827F827%F827F827F827F827F8527D27F827F827FD0BFFA827F8277DA85227F852FD%09FF7DF82752FFFFFF5227F8A8FD10FFF827F8275252F827F852FD0AFF52%27F827F87D5227F82727FD0CFF7DF827F827527DF827F827F827F827F827%F827F82727A82727F827F8A8FFA8FFA8FFA8FFA8FFA852F827A8FFFFFF7D%27F8A8FD04FFA8FFFFFF522752FD05FF272752FD05FFA8FFFFFFA8FFFFFF%A8FF7D27F827A8FFFF7DF827F8A8FFFFA8FFFFFFA8FF5227F82727A8FFFF%7D27F8277DFFA8FFA8FFA8FFA8FFA8FF5227F827F8527D27F827F827F827%F827F827F827F8277D27F827F827FD0BFF27277DFD05FF272752FD09FF7D%FD06FF7DF852FD0FFF7DF82752FD04FF27F827A8FD08FF52F82727FD05FF%2727F8A8FD0BFF7DF827F82727A8F827F827F827F827F827F827F82727A8%F827F827F8A8FFA8FFA8FFA8FFA8FFA827F87DFD05FF52F87DFD04FFA8FD%0BFF522727FD0FFF5227F87DA8A8A8FF2727F8A8FFFFA8FD06FF5227FFA8%A8A8FFA827F827A8FFA8FFA8FFA8FFA8FFA8FF5227F827F8277D52F827F8%27F827F827F827F827F87D5227F827F827FD0AFFA8F852A8A8597D7DA87D%2752FD09FFA8A87D7D7DFFA927F87DFD0EFF7D52F8272127F8272727F827%52A8A8FD04FFA87D7D52522727F8272727F827F8A8FD0BFF7DF827F827F8%537D27F827F827F827F827F827F852A827F827F827F8A8FFA8FFA8FFA8FF%A8FFA87D5227F827F827F8527DA8FFFFA8FFA8FFFFFF5227F827F827F87D%7D52A8FFFFFFA8FFFFFFA8FD05FF2727F827F827F827F827F827F827F859%FFFFFF7DF827F827F827F827F827F827F827F8A8FFFFA8FFA8FFA8FFA8FF%5227F827F827F87D7D27F827F827F827F827F8277D52F827F827F827FD0B%FF5227F827F827F827F827A8FD07FF2727F827F827F827F852A8FD0DFFA8%27F827F827F827F827F827F827F82752FFFFFF5227F827F827F827F827F8%27F827F8277DFD0AFF7DF827F827F827F8A8A852F827F827F827277DA853%F827F827F827F8A8FFA8FFA8FFA8FFA8FF5227F827F827F827F827F827A8%FFA8FFFFFF2727F827F827F827F827F852FD04FFA8FFFFFFA8FD05FFF827%F827F827277D5227F827F827F852FFFFFF7DF827F827F827527D2727F827%F827F8A8FFFFA8FFA8FFA8FFA9FF5227F827F827F827F8527D847D7D527D%7DA87D27F827F827F827F827FD09FFA827F827F827527D2727F827F852FD%04FF7D27F827F827527D2127F827F8A8FD0CFFA827F827F82727FFFFFF7D%27F827F82727FFFFFF5227F827F82752FFFFFF2727F827F8277DFD0AFF7D%F827F827F827F827F8272752527D5252F827F8272752F827F827F8A8FFA8%FFA8FFA8FFFF7DF827F827F8FFFF7DF827F827F8FFFFFFA852F827F82727%FFFF52F827F82752FFA8FFFFFFA8FFFFFFA8FFFFA8F827F827F87DFFFFFF%A8F827F827F852A8FFFF7DF827F827F8A8FFFFFF7DF827F827F87DFFFFA8%FFA8FFA8FFA8FF5227F827F827F827F827F827F827F827F827F827F87D52%27F827F827FD09FF5227F827F827A8FF5927F827F827A8FFFFFF2727F827%F852FFFF5227F827F852FD0CFFA827F827F82728FFFFFF7D27F827F82727%FFFFFF5227F827F8277DFFFFFF5227F827F8277DFD0AFF7DF827F827F827%F827F827F827F827F827F827F827527DF827F827F8A8FFA8FFA8FFA8FFFF%52F827F827F87DFF52F827F827F8A8FFFFA827F827F827F8A8A827F827F8%2727FD05FFA8FFFFFFA8FFFFA8F827F827F827A8FFFF52F827F827F852A8%FFFF7DF827F827F852FFFFA827F827F827F87DFFFFA8FFA8FFA8FFA8FF52%27F827F827F827F827F827F827F827F827F827F8535227F827F827FD09FF%5927F827F8277DFF5227F827F827A8FFFFFF2727F827F827A8FFF827F827%F852FD0CFFA827F827F827F8FFFFFF5227F827F82727FFFFFF5227F827F8%2752FFFFFF2727F827F8277DFD0AFF7DF827F827F827F827F827F827F827%F827F827F827527DF827F827F8A8FFA8FFA8FFA8FFFFA8F827F827F852A8%27F827F82727FFA8FFFF52F827F827F87D7D27F827F82753FFA8FFA8FFA8%FFA8FFA8FFFFA8F827F827F827FFFFFF7DF827F827F852A8FFFF7DF827F8%27F87DFFFFFF52F827F827F884FFFFA8FFA8FFA8FFA8FF5227F827F827F8%27F827F827F827F827F827F827F87D5227F827F827FD0AFF52F827F827F8%27F827F827F8A8FD04FFA827F827F827F827F827002727FD0DFFA827F827%F827277D7DA85227F827F82727FFFFFF5227F827F82727A87D7D2727F827%F8277DFD0AFF7DF827F827F827F827F827F827F827F827F827F827527DF8%27F827F8A8FFA8FFA8FFA8FFA8FFA827F827F827F827F827F87DFFFFA8FF%A8FF7D27F827F827F827F827F8A8FD04FFA8FFFFFFA8FD04FFA8F827F827%F827F827F827F827F827F828A8FFFF7DF827F827F827F827F827F827F827%F884FFFFA8FFA8FFA8FFA9FF5227F827F827F827F827F827F827F827F827%F827F87D5227F827F827FD09FFA9FFA852F827F827F827F87DFD08FF7D27%F827F827F82727A8FD0EFFA952F827F827F827F827F827F82727277DFFFF%FF7D27F827F827F827F827F827F8272752A8FD0AFF7DF827F827F827F827%F827F827F827F827F827F827527DF827F827F8A8FFA8FFA8FFA8FFA8FFA8%FFA8845252275252A8FFFFA8FFA8FFA8FFA8FFA87D282727527DFFFFFFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8847D7D52522753597D7DFFA8FFA8%FFA8FFA8A87D7D527D2727277D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF52%27F827F82727FD0D52277D5227F827F827FD64FF7DF827F827F8FD047D7E%7D7D7D7E7D7D7D7E7D7D7D52F827F827F8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5227F8%27F827F827F827F827F827F827F827F827F827F827F827F827FD64FF7DF8%27F827F827F827F827F827F827F827F827F827F827F827F827F8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FF5227F827F827F827F827F827F827F827F827F827F827F827%F827F827%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Calcando) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Plugin Fusiones de Adobe) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\207fico de Adobe) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (S\222mbolos de Adobe) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forma compuesta de Adobe) (PathFinderS.aip)%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 1 2 Bd[<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFBFBFAF9F9F8F7F6F5F4F3F2F0EFED>0 %_Br[0 0 0 0 1 82.8221 0 %_BS%_0 0 0 0 1 82.8221 0 Bs0 0 0 0.07 1 50 100 %_BS%_0 0 0 0.07 1 50 100 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 1 2 Bd[<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFBFBFAF9F9F8F7F6F5F4F3F2F0EFED>0 %_Br[1 0 82.8221 0 %_BS%_1 0 82.8221 0 Bs0.93 0 50 100 %_BS%_0.93 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212121212121212121212121212121213131313131313131313131313131313><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-2334.5 6302.9351 m-2120.8999 6302.9351 L-2120.8999 6295.1343 L-2334.5 6295.1343 L-2334.5 6302.9351 Ln0 O0 0 0 1 k-2334.5 6299.0352 m-2324.4856 6301.5269 -2317.6863 6302.875 -2305.7007 6302.9351 c-2292.7185 6303 -2227.6997 6302.9351 y-2162.6816 6303 -2149.6997 6302.9351 v-2137.7124 6302.875 -2130.9136 6301.5269 -2120.8999 6299.0352 C-2130.9136 6296.5435 -2137.7124 6295.1953 -2149.6997 6295.1343 c-2162.6816 6295.0688 -2227.6997 6295.1343 y-2292.7185 6295.0688 -2305.7007 6295.1343 v-2317.6863 6295.1953 -2324.4856 6296.5435 -2334.5 6299.0352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6109.2451 10175.5 L-6109.2451 10154.7842 L-6207 10154.7842 L-6207 10175.5 Ln0 O0 g1 XR-6109.5586 10170.8184 m-6124.8247 10157.0303 -6142.5537 10177.9492 -6157.9277 10165.666 C-6156.4199 10160.0137 -6150.7598 10166.9678 -6148.5176 10162.3213 C-6148.4341 10160.7207 -6151.6313 10162.2207 -6151.5127 10160.1006 C-6149.6245 10156.6914 -6144.8955 10157.1885 -6143.5664 10161.2373 C-6137.3115 10159.2676 -6130.7734 10153.3242 -6124.7847 10155.1172 C-6123.2671 10156.4678 -6124.0708 10157.6514 -6123.6211 10158.9277 C-6116.2871 10154.4922 -6107.4644 10163.6279 -6109.5586 10170.8184 Cf-6153.2842 10172.4326 m-6153.8247 10172.8086 -6152.9277 10173.9199 -6153.2529 10174.4082 C-6155.3237 10173.6563 -6157.6919 10169.5781 -6159.4731 10166.8105 C-6159.2632 10168.3398 -6160.6641 10169.6641 -6162.0781 10167.4326 C-6162.2383 10166.6152 -6161.3667 10166.3281 -6161.6729 10165.4365 C-6162.8306 10163.8682 -6163.8472 10165.3535 -6164.7798 10165.125 C-6165.3184 10164.3613 -6165.6143 10163.7188 -6165.6816 10163.1943 C-6159.5537 10160.374 -6152.9263 10172.1768 -6146.7456 10172.6025 C-6146.9048 10175.6152 -6150.8555 10177.3008 -6153.2842 10172.4326 Cfuu0 XR-6150.1602 10167.1602 m-6165.0142 10160.6201 -6186.4731 10164.8418 -6202.3687 10164.8193 c-6208.2988 10164.8125 -6197.8965 10164.8213 -6203.8267 10164.8262 cN0 O0 g-6147.8052 10165.9395 m-6165.1475 10158.7637 -6184.9341 10163.5557 -6203.0532 10163.4863 C-6203.8608 10164.373 -6204.6685 10165.2617 -6205.4751 10166.1475 C-6204.6973 10166.1475 -6203.9194 10166.1465 -6203.1421 10166.1533 C-6202.3345 10165.2656 -6201.5273 10164.3789 -6200.7202 10163.4922 C-6201.3516 10163.502 -6201.9844 10163.4951 -6202.6157 10163.4951 c-6204.3735 10163.498 -6208.9165 10166.1621 -6205.0376 10166.1572 c-6204.4063 10166.1572 -6203.7734 10166.1641 -6203.1421 10166.1533 c-6201.4155 10166.126 -6196.8184 10163.5234 -6200.7202 10163.4922 c-6201.4976 10163.4834 -6202.2759 10163.4863 -6203.0532 10163.4863 c-6204.8081 10163.4854 -6209.3574 10166.1328 -6205.4751 10166.1475 c-6188.1177 10166.2148 -6169.1025 10161.5137 -6152.5151 10168.3789 c-6151.1035 10168.9639 -6145.8081 10166.7666 -6147.8052 10165.9395 c-6147.8052 10165.9395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 158)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.0078 10175.5 L-6195.0078 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.3218 10164.8633 m-6206.3218 10168.8125 L-6206.3218 10169.8477 L-6206.3218 10170.4863 L-6206.3218 10171.585 L-6206.3218 10175.5 L-6195.6865 10175.5 L-6195.6865 10171.585 L-6195.6865 10170.4863 L-6195.6865 10169.8477 L-6195.6865 10168.8125 L-6195.6865 10164.8633 L-6206.3218 10164.8633 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6195.0078 10171.585 m-6195.0078 10170.9395 L-6207 10170.9414 L-6207 10171.585 L-6207 10171.6504 L-6195.0078 10171.6494 L-6195.0078 10171.585 Lf-6195.0078 10168.8125 m-6207 10168.8125 L-6207 10169.5215 L-6195.0078 10169.5215 L-6195.0078 10168.8125 Lf0.15 1 0.9 0.1 k-6195.0078 10170.5518 m-6207 10170.5518 L-6207 10170.9414 L-6195.0078 10170.9395 L-6195.0078 10170.5518 Lf-6195.0078 10169.8477 m-6195.0078 10169.5215 L-6207 10169.5215 L-6207 10169.8477 L-6207 10169.9121 L-6195.0078 10169.9121 L-6195.0078 10169.8477 Lf0 1 1 0 k-6195.0078 10170.4863 m-6195.0078 10169.9121 L-6207 10169.9121 L-6207 10170.4863 L-6207 10170.5518 L-6195.0078 10170.5518 L-6195.0078 10170.4863 LfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 160)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10174.3047 m-6196.3638 10174.3047 L-6196.3638 10163.668 L-6207 10163.668 L-6207 10174.3047 Ln-6207 10163.668 m-6207 10167.5586 L-6207 10168.2686 L-6207 10168.6514 L-6207 10169.293 L-6207 10169.6816 L-6207 10170.3906 L-6207 10174.3047 L-6196.3638 10174.3047 L-6196.3638 10163.668 L-6207 10163.668 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6200.9585 10175.5 m-6200.2515 10175.5 L-6200.2607 10170.4561 L-6194.5229 10170.4551 L-6194.5229 10169.7441 L-6200.9707 10169.7471 L-6200.9585 10175.5 Lf-6202.6055 10168.0342 m-6202.8696 10168.2969 -6203.0215 10168.6631 -6203.0215 10169.0361 C-6203.0073 10175.5 L-6202.2979 10175.5 L-6202.3125 10169.0361 L-6202.3125 10168.8496 -6202.2363 10168.668 -6202.1045 10168.5352 c-6201.9717 10168.4033 -6201.7891 10168.3281 -6201.6021 10168.3281 C-6194.5229 10168.3281 L-6194.5229 10167.6182 L-6201.6021 10167.6182 L-6201.9761 10167.6182 -6202.3418 10167.7695 -6202.6055 10168.0342 cf0.15 1 0.9 0.1 k-6201.2827 10175.5 m-6200.9585 10175.5 L-6200.9707 10169.7471 L-6194.5229 10169.7441 L-6194.5229 10169.3555 L-6201.2827 10169.3555 L-6201.2827 10175.5 Lf-6202.1045 10168.5352 m-6202.2363 10168.668 -6202.3125 10168.8496 -6202.3125 10169.0361 C-6202.2979 10175.5 L-6201.9219 10175.5 L-6201.9219 10169.0361 L-6201.9219 10168.9521 -6201.8877 10168.8711 -6201.8281 10168.8105 c-6201.7695 10168.752 -6201.6865 10168.7188 -6201.6025 10168.7188 C-6194.5229 10168.7188 L-6194.5229 10168.3281 L-6201.6021 10168.3281 L-6201.7891 10168.3281 -6201.9717 10168.4033 -6202.1045 10168.5352 cf0 1 1 0 k-6201.8281 10168.8105 m-6201.8877 10168.8711 -6201.9219 10168.9521 -6201.9219 10169.0361 C-6201.9219 10175.5 L-6201.2827 10175.5 L-6201.2827 10169.3555 L-6194.5229 10169.3555 L-6194.5229 10168.7188 L-6201.6025 10168.7188 L-6201.6865 10168.7188 -6201.7695 10168.752 -6201.8281 10168.8105 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 161)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.0078 10175.5 L-6195.0078 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.0117 10164.8633 m-6206.0117 10168.8125 L-6206.0117 10169.8477 L-6206.0117 10170.4863 L-6206.0117 10171.585 L-6206.0117 10175.5 L-6195.3765 10175.5 L-6195.3765 10171.585 L-6195.3765 10170.4863 L-6195.3765 10169.8477 L-6195.3765 10168.8125 L-6195.3765 10164.8633 L-6206.0117 10164.8633 Ln0 O0.15 1 0.9 0.1 k-6195.0078 10170.5518 m-6207 10170.5518 L-6207 10170.9414 L-6195.0078 10170.9395 L-6195.0078 10170.5518 Lf-6195.0078 10169.8477 m-6195.0078 10169.5215 L-6207 10169.5215 L-6207 10169.8477 L-6207 10169.9121 L-6195.0078 10169.9121 L-6195.0078 10169.8477 Lf0 1 1 0 k-6195.0078 10170.4863 m-6195.0078 10169.9121 L-6207 10169.9121 L-6207 10170.4863 L-6207 10170.5518 L-6195.0078 10170.5518 L-6195.0078 10170.4863 Lf1 Ap0.746094 0.675781 0.667969 0.898438 k-6205.2715 10171.6504 m-6207 10171.6504 L-6207 10168.8125 L-6205.2715 10168.8125 L-6205.2715 10171.6504 Lf0.15 1 0.9 0.1 k-6204.5967 10171.6338 m-6205.4492 10171.6338 L-6205.4492 10168.7969 L-6204.5967 10168.7969 L-6204.5967 10171.6338 Lf0 Ap0.746094 0.675781 0.667969 0.898438 k-6195.0078 10171.585 m-6195.0078 10170.9395 L-6207 10170.9414 L-6207 10171.585 L-6207 10171.6504 L-6195.0078 10171.6494 L-6195.0078 10171.585 Lf-6195.0078 10168.8125 m-6207 10168.8125 L-6207 10169.5215 L-6195.0078 10169.5215 L-6195.0078 10168.8125 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 162)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.6099 10175.5 L-6195.6099 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.2461 10171.585 m-6206.2461 10175.5 L-6195.6099 10175.5 L-6195.6099 10164.8633 L-6206.2461 10164.8633 L-6206.2461 10168.7549 L-6206.2461 10171.585 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6200.6245 10171.5215 m-6200.6245 10170.877 L-6207 10170.877 L-6207 10171.5215 L-6207 10171.585 L-6200.6245 10171.585 L-6200.6245 10171.5215 Lf-6200.6245 10168.748 m-6207 10168.748 L-6207 10169.458 L-6200.6245 10169.458 L-6200.6245 10168.748 Lf0.15 1 0.9 0.1 k-6200.6245 10170.4863 m-6207 10170.4863 L-6207 10170.877 L-6200.6245 10170.877 L-6200.6245 10170.4863 Lf-6200.6245 10169.7832 m-6200.6245 10169.458 L-6207 10169.458 L-6207 10169.7832 L-6207 10169.8486 L-6200.6245 10169.8486 L-6200.6245 10169.7832 Lf0 1 1 0 k-6200.6245 10170.4209 m-6200.6245 10169.8486 L-6207 10169.8486 L-6207 10170.4209 L-6207 10170.4863 L-6200.6245 10170.4863 L-6200.6245 10170.4209 LfU-6206.2461 10175.5 m-6195.6099 10175.5 L-6195.6099 10164.8633 L-6206.2461 10164.8633 L-6206.2461 10175.5 Ln-6195.7241 10170.1816 m-6203.8125 10174.8516 LN0 O0.746094 0.675781 0.667969 0.898438 k-6203.4814 10169.46 m-6203.4814 10166.6406 L-6197.3535 10170.1777 L-6203.4814 10173.7158 L-6203.4814 10170.877 L-6203.8125 10170.877 L-6203.8125 10171.585 L-6203.8125 10174.8516 L-6195.7241 10170.1816 L-6203.8125 10165.5127 L-6203.8125 10168.751 L-6203.8125 10169.46 L-6203.4814 10169.46 Lf0.15 1 0.9 0.1 k-6203.4814 10173.7158 m-6197.3535 10170.1777 L-6203.4814 10166.6406 L-6203.4814 10169.46 L-6203.4814 10169.8477 L-6203.3472 10169.8477 L-6203.2148 10169.4756 -6202.8633 10169.207 -6202.4453 10169.207 c-6201.9155 10169.207 -6201.4849 10169.6367 -6201.4849 10170.167 c-6201.4849 10170.6973 -6201.9155 10171.127 -6202.4453 10171.127 c-6202.8633 10171.127 -6203.2148 10170.8594 -6203.3472 10170.4863 C-6203.4814 10170.4863 L-6203.4814 10170.877 L-6203.4814 10173.7158 Lf0 1 1 0 k-6202.4453 10171.127 m-6201.9155 10171.127 -6201.4849 10170.6973 -6201.4849 10170.167 c-6201.4849 10169.6367 -6201.9155 10169.207 -6202.4453 10169.207 c-6202.8633 10169.207 -6203.2148 10169.4756 -6203.3472 10169.8477 c-6203.3828 10169.9473 -6203.4058 10170.0537 -6203.4058 10170.167 c-6203.4058 10170.2793 -6203.3828 10170.3848 -6203.3472 10170.4863 c-6203.2148 10170.8594 -6202.8633 10171.127 -6202.4453 10171.127 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6206.8833 10175.4551 m-6115.0479 10175.4551 L-6115.0479 10171.1758 L-6206.8833 10171.1758 L-6206.8833 10175.4551 Ln0 O0 0 0 1 k-6206.6631 10172.7754 m-6207 10172.8418 -6206.4814 10173.0313 -6206.8833 10172.8887 C-6206.8379 10172.7705 -6206.7725 10172.6816 -6206.6631 10172.7754 Cf-6116.1675 10172.9414 m-6117.2524 10173.7041 -6118.6816 10172.9336 -6119.8701 10173.4199 C-6120.0098 10173.4521 -6119.8345 10173.002 -6120.1484 10173.1025 C-6121.3008 10173.6953 -6123.1162 10173.3418 -6124.5195 10172.8848 C-6124.4346 10172.7666 L-6124.7017 10172.6816 -6125.0283 10173.0723 -6125.3115 10173.0176 C-6125.3135 10172.9395 -6125.2207 10172.9063 -6125.2861 10172.7988 C-6125.3574 10173.0352 -6125.7983 10172.9082 -6125.9185 10173.084 C-6126.0303 10172.9922 -6126.0195 10172.8047 -6126.1641 10172.7012 C-6126.3262 10172.9697 L-6126.7769 10173.6094 -6127.4209 10172.9258 -6128.0361 10173.2559 C-6128.0063 10173.1934 -6127.9453 10173.1445 -6127.9941 10173.084 C-6128.9814 10173.4727 -6130.2168 10173.4004 -6131.3208 10173.543 C-6131.2769 10173.4482 -6131.2363 10173.2754 -6131.3008 10173.168 C-6131.3555 10173.4512 -6131.6963 10173.5225 -6131.9922 10173.5781 C-6132.1255 10173.2871 -6132.4995 10173.8438 -6132.8467 10173.6836 C-6132.8169 10173.6191 L-6133.0732 10173.9238 -6133.1973 10173.4434 -6133.4053 10173.8086 C-6133.5684 10173.5801 L-6133.6807 10173.9902 -6133.9395 10173.3672 -6134.1514 10173.5762 C-6134.1445 10173.6602 L-6134.3442 10173.7598 -6134.4482 10173.5537 -6134.6338 10173.623 C-6134.6514 10173.5762 L-6135.0854 10173.6836 -6135.3379 10173.4551 -6135.3271 10173.7754 C-6135.4795 10173.5186 -6134.9063 10173.6582 -6135.1455 10173.2852 C-6136.5732 10173.6152 -6138.0459 10173.5508 -6139.4834 10173.5566 C-6139.6465 10173.4277 -6139.7505 10173.3887 -6139.7871 10173.2676 C-6139.9307 10173.332 -6140.3281 10173.3262 -6140.4585 10173.4902 C-6140.4102 10173.4834 -6140.5513 10173.3262 -6140.6274 10173.3105 C-6140.8887 10173.1895 -6140.9131 10173.6621 -6141.2002 10173.5186 C-6141.0859 10173.4336 -6141.0469 10173.3301 -6141.0854 10173.2109 C-6141.3301 10173.4609 -6141.6577 10173.4209 -6141.9473 10173.502 C-6141.9023 10173.4482 -6141.8325 10173.416 -6141.8433 10173.3154 C-6142.1602 10173.5986 -6142.4209 10173.2559 -6142.6982 10173.4346 C-6142.5947 10173.25 L-6143.0415 10173.0254 -6142.7266 10173.6367 -6143.1128 10173.5039 C-6143.02 10173.4453 -6143.0527 10173.373 -6143.0361 10173.2979 C-6143.3965 10173.6338 -6143.9795 10173.5225 -6144.3389 10173.6367 C-6144.3174 10173.6113 -6144.3232 10173.5605 Y-6144.7148 10173.6025 -6145.1245 10173.498 -6145.5552 10173.6445 C-6145.7119 10173.5625 -6145.5039 10173.1934 -6145.9185 10173.2617 C-6145.9033 10173.6328 -6146.6221 10173.4141 -6146.3779 10173.834 C-6146.7319 10173.7734 -6147.2925 10173.6338 -6147.5283 10173.7598 C-6147.3691 10173.6191 -6147.7007 10173.3066 -6147.4063 10173.2754 C-6147.6289 10173.0498 L-6147.5957 10172.8984 -6147.3999 10173.1016 -6147.4707 10172.9102 C-6147.6182 10172.9258 -6148.0479 10173.0723 -6148.1797 10173.0117 C-6148.4531 10173.2393 -6148.7041 10173.6641 -6149.1465 10173.7109 C-6148.9385 10173.5664 -6149.2646 10173.3018 -6149.1235 10173.2383 C-6149.7407 10173.9492 L-6149.8877 10173.9668 -6149.7725 10173.6563 -6149.9854 10173.7529 C-6149.9746 10173.8516 -6150.0674 10173.9121 -6150.1318 10173.9922 C-6150.1875 10173.9492 -6150.7441 10174.084 -6150.8081 10173.7188 C-6150.8735 10173.5762 -6150.5684 10173.6426 -6150.7314 10173.5117 C-6151.0029 10173.5156 -6151.0151 10173.6406 -6151.2871 10173.6465 C-6151.2925 10173.5977 L-6151.4717 10173.543 -6151.8213 10173.7529 -6151.6265 10173.9551 C-6151.5015 10173.9668 -6151.6738 10173.7354 -6151.4888 10173.8418 C-6151.6152 10174.0537 -6151.9312 10174.1133 -6152.2031 10174.1172 C-6152.1104 10174.0586 -6152.1216 10173.9609 -6152.0845 10173.8574 C-6152.4497 10174.1445 -6152.8369 10174.2354 -6153.2451 10174.3555 C-6153.2515 10174.5293 -6153.0928 10174.0391 -6153.0327 10174.1309 C-6153.5557 10173.8896 -6154.1128 10174.4727 -6154.5479 10174.1201 C-6154.4766 10174.0898 -6154.5098 10174.3672 -6154.5146 10174.3184 C-6154.7666 10174.2969 -6154.7549 10174.0449 -6154.9189 10174.1377 C-6154.9355 10173.9902 -6155.1255 10174.1855 -6155.2944 10174.2305 C-6155.3818 10174.3369 -6155.3384 10174.1582 -6155.1914 10174.1426 C-6155.4268 10174.2676 -6156.3691 10174.4941 -6156.9131 10174.2793 C-6156.9023 10174.377 -6157.2471 10174.6377 -6157.3721 10174.627 C-6157.3232 10174.3984 L-6157.4375 10174.2617 -6157.7422 10174.418 -6157.7632 10174.2227 C-6158.0303 10174.5 -6156.7344 10173.9863 -6157.0957 10174.2002 C-6157.1895 10174.0098 -6157.5991 10174.5645 -6157.5215 10174.2529 C-6157.7725 10174.2617 -6158.0161 10174.5186 -6158.2559 10174.3047 C-6158.1865 10174.3418 -6158.0522 10173.9873 -6158.2549 10174.0039 C-6158.6123 10174.0449 -6158.3564 10174.1133 -6158.6465 10174.1895 C-6158.8281 10174.2832 L-6158.8398 10174.5059 -6159.1475 10174.2529 -6159.0146 10174.502 C-6159.0586 10174.3184 -6159.5337 10174.6152 -6159.4971 10174.2461 C-6159.4473 10173.9551 L-6159.6016 10173.9766 -6159.7002 10174.2617 -6159.8213 10174.3896 C-6159.8418 10174.3633 -6159.8823 10174.3047 -6159.8745 10174.2578 C-6159.8994 10174.7031 -6160.2432 10174.2207 -6160.4268 10174.5645 C-6160.7505 10174.4102 -6161.2495 10174.5508 -6161.4023 10174.2734 C-6161.6514 10174.4082 -6161.8784 10174.5684 -6162.1621 10174.4727 C-6162.1055 10174.4307 -6162.0283 10174.418 -6162.0122 10174.3223 C-6162.1904 10174.1914 -6162.2344 10174.3086 -6162.3975 10174.3809 C-6162.3608 10174.3145 -6162.7539 10174.1201 -6162.9521 10173.9629 C-6163.1992 10174.0957 -6163.1143 10174.3359 -6163.1392 10174.4824 C-6163.3652 10174.043 -6163.8379 10174.7656 -6164.1211 10174.3672 C-6164.0352 10174.3066 -6163.7598 10174.1514 -6163.9658 10174.041 C-6164.1919 10173.6025 -6164.4219 10174.3652 -6164.7861 10174.1543 C-6164.6968 10174.5186 L-6164.8594 10174.293 -6165.2334 10174.7305 -6165.1963 10174.3594 C-6165.3184 10174.4902 -6165.6265 10174.2383 -6165.5859 10174.5938 C-6166.1846 10174.293 -6167.0425 10174.7754 -6167.4102 10174.1377 C-6167.4961 10174.1973 -6167.7104 10174.1367 -6167.6665 10174.3193 C-6167.5239 10174.5176 -6167.4673 10174.1777 -6167.4141 10174.3125 C-6167.4912 10174.3232 -6167.5078 10174.4209 -6167.5161 10174.4697 C-6167.7021 10174.3887 -6167.8486 10174.3633 -6167.6729 10174.0674 C-6168.0869 10173.8477 -6168.1001 10174.6719 -6168.6274 10174.5332 C-6168.6035 10174.3857 -6168.6436 10174.3301 -6168.7979 10174.3535 C-6169.0903 10174.6055 L-6169.4312 10174.5469 -6169.2842 10174.2705 -6169.2925 10174.0215 C-6169.4746 10174.0645 -6169.6973 10174.0527 -6169.7803 10174.2383 C-6170.0015 10173.9258 L-6169.8398 10174.1514 -6170.1514 10174.0762 -6170.2368 10174.1367 C-6170.1514 10174.0762 L-6170.1846 10173.9697 -6170.3955 10174.0352 -6170.5024 10174.0664 C-6170.4766 10174.2207 -6170.2617 10174.2832 -6170.1445 10174.3281 C-6170.2373 10174.4375 -6170.3823 10174.4121 -6170.5059 10174.541 C-6170.4648 10174.2969 -6170.8027 10174.3672 -6170.9473 10174.3418 C-6171.1133 10174.2891 -6171.1348 10174.5605 -6171.1831 10174.5527 C-6171.1875 10174.4258 -6171.4541 10174.5313 -6171.3247 10174.3535 C-6171.2681 10174.3125 -6171.1953 10174.4766 -6171.1016 10174.3652 C-6171.2109 10174.2705 -6171.1982 10174.0498 -6171.4258 10174.2109 C-6171.5967 10174.332 -6171.3818 10174.6934 -6171.7061 10174.5391 C-6171.6211 10174.4785 -6171.6055 10174.3809 -6171.5391 10174.293 C-6171.8433 10174.166 L-6171.8564 10174.3887 L-6171.8975 10174.332 -6171.8691 10174.3125 -6171.8877 10174.2832 C-6171.9785 10174.5176 -6172.3521 10174.3555 -6172.4209 10174.6191 C-6172.5742 10174.6426 -6172.7441 10174.4648 -6172.8906 10174.4395 C-6172.8623 10174.4199 L-6173.0415 10174.2891 -6173.2793 10174.375 -6173.4297 10174.5254 C-6173.4219 10174.4766 L-6173.5195 10174.459 -6173.7505 10174.4941 -6173.8735 10174.625 C-6174.1201 10174.457 -6173.9561 10173.7842 -6174.2295 10174.0645 C-6174.48 10174.0723 -6174.6221 10174.4727 -6174.5215 10174.6152 C-6174.9717 10174.4648 -6175.4834 10174.8281 -6175.9009 10174.4824 C-6175.9658 10174.5723 -6175.9248 10174.6289 -6176.0586 10174.6816 C-6176.7197 10174.5938 -6177.4551 10174.9453 -6177.9814 10174.5078 C-6177.79 10174.4141 -6177.9688 10174.2852 -6177.9727 10174.1582 C-6178.1309 10174.3574 -6178.1631 10173.9512 -6178.2197 10174.293 C-6178.2041 10174.4941 -6178.2197 10174.5918 -6178.0337 10174.6729 C-6178.4282 10174.7813 -6179.0283 10174.7813 -6179.2471 10174.5938 C-6179.1377 10174.6865 -6179.2227 10174.748 -6179.3086 10174.8086 C-6179.2803 10174.4873 -6179.5713 10174.4395 -6179.7915 10174.5527 C-6179.8223 10174.748 L-6179.9658 10174.5469 L-6180.0503 10174.6094 -6180.0591 10174.957 -6180.2773 10174.7695 C-6180.2891 10174.6934 -6180.3018 10174.6162 -6180.3418 10174.5605 C-6180.5693 10174.7207 -6180.8906 10174.9922 -6181.1377 10174.8262 C-6181.3398 10174.541 L-6181.4453 10174.5723 -6181.6235 10174.7441 -6181.4375 10174.8262 C-6181.8594 10174.6543 -6182.1309 10174.6328 -6182.2646 10174.3857 C-6182.9912 10174.9873 -6184.0459 10175.0117 -6184.8906 10174.9688 C-6184.8652 10174.8223 L-6185.0923 10174.6855 -6184.9834 10175.0781 -6185.1416 10174.9766 C-6185.0684 10174.8369 -6185.3145 10174.6729 -6185.1362 10174.502 C-6185.4609 10174.3477 -6185.5547 10174.7559 -6185.7656 10174.8223 C-6185.7979 10175.0146 -6185.5957 10174.6992 -6185.6367 10174.9434 C-6185.6729 10175.0117 -6186.0859 10174.793 -6186.1362 10175.084 C-6186.2178 10174.9697 -6186.1543 10174.7559 -6186.1104 10174.6377 C-6186.3086 10174.7793 L-6186.5513 10174.4395 -6185.7559 10174.1719 -6186.0107 10173.7529 C-6186.1934 10173.7988 L-6186.3682 10173.4941 -6185.71 10173.4551 -6186.1689 10173.3506 C-6186.3682 10173.4941 -6186.5381 10173.916 -6186.3608 10174.0449 C-6186.7754 10174.125 -6186.5527 10174.7383 -6186.9985 10174.7139 C-6187.1201 10174.543 -6186.6416 10174.6729 -6186.7275 10174.4336 C-6186.9375 10174.1992 -6187.1484 10174.5645 -6187.3354 10174.4824 C-6187.1279 10174.5918 -6187.3032 10174.8857 -6187.4375 10174.9395 C-6187.6641 10174.8018 -6187.29 10174.6641 -6187.6113 10174.6338 C-6187.6641 10174.8018 -6187.9595 10174.9277 -6187.7041 10175.0449 C-6187.8203 10175.4258 -6188.0381 10174.9395 -6188.2129 10175.2344 C-6188.3174 10174.9668 -6187.8823 10174.6152 -6188.2354 10174.4814 C-6188.1792 10174.7393 -6188.6704 10174.832 -6188.4839 10175.2148 C-6188.6221 10175.1406 -6188.6367 10174.9375 -6188.5361 10174.7793 C-6188.7334 10174.6201 -6189.0151 10175.25 -6189.0801 10174.7383 C-6189.1479 10175.002 L-6189.21 10174.916 -6189.2983 10174.8516 -6189.3994 10174.709 C-6189.5732 10174.7041 -6189.96 10175.0664 -6189.9443 10174.668 C-6190 10174.709 -6190.3975 10174.6914 -6190.2441 10174.9668 C-6189.9971 10175.1348 -6189.96 10174.7656 -6189.8223 10175.1377 C-6189.9971 10174.834 -6190.1787 10175.1777 -6190.3213 10175.2793 C-6190.3447 10175.125 L-6190.4297 10175.1855 -6190.6255 10175.1514 -6190.6787 10175.3184 C-6190.6133 10175.2305 -6190.6475 10175.125 -6190.7148 10175.0879 C-6190.8042 10175.3223 L-6191.1494 10175.4395 -6190.8857 10174.9102 -6191.2217 10174.9785 C-6190.9663 10174.7969 L-6191.0225 10174.8359 -6191.1367 10174.6162 -6191.2979 10174.6895 C-6191.3604 10174.9033 -6191.4775 10175.1602 -6191.5313 10175.3262 C-6191.7207 10175.4199 -6191.6162 10175.085 -6191.8027 10175.3047 C-6191.5586 10175.0469 L-6191.5215 10174.9766 -6191.7231 10174.6934 -6191.9761 10174.6992 C-6192.1377 10174.7734 -6192.3887 10175.082 -6192.1338 10175.1992 C-6192.2607 10175.2031 -6192.4385 10175.0723 -6192.3379 10174.916 C-6192.6255 10174.9902 -6192.2998 10175.1465 -6192.5479 10175.2793 C-6192.6494 10175.1367 -6192.9658 10174.9336 -6193.1563 10174.7266 C-6192.8975 10174.3682 L-6193.0693 10174.3652 L-6192.8467 10174.0781 -6193.1826 10174.1465 -6193.0566 10173.8438 C-6193.1743 10173.7969 -6193.3169 10173.8994 -6193.4307 10173.9785 C-6193.0864 10174.4629 -6193.8159 10174.6406 -6193.7158 10175.082 C-6194.1875 10175.2031 -6194.0107 10174.0078 -6194.5024 10174.6992 C-6194.4219 10174.8145 -6194.6533 10175.1504 -6194.3564 10175.0225 C-6194.6494 10174.9746 -6194.5557 10175.4658 -6194.9014 10175.2832 C-6194.6455 10175.1016 -6195.1763 10174.8359 -6194.8066 10174.5723 C-6194.8311 10174.7188 -6194.6001 10174.6836 -6194.5435 10174.6426 C-6194.6641 10174.4727 -6194.5186 10174.1973 -6194.8184 10174.1973 C-6195.0015 10174.2393 -6195.2524 10174.248 -6195.2158 10174.4785 C-6195.2085 10174.7314 -6194.9365 10174.4512 -6195.0537 10174.707 C-6195.4185 10174.7949 -6195.4795 10174.4102 -6195.6304 10174.8594 C-6195.3999 10174.8232 -6195.3423 10175.084 -6195.3467 10175.2578 C-6195.6143 10175.3633 L-6195.5625 10175.1953 L-6195.9922 10175.0742 -6195.6895 10175.5 -6196.1055 10175.4551 C-6196.3008 10175.123 L-6196.2017 10174.8369 -6195.6953 10175.25 -6195.7695 10174.7842 C-6196.04 10174.7656 -6196.1299 10175.002 -6196.3848 10174.8818 C-6196.3281 10174.8418 -6196.2505 10174.8301 -6196.1943 10174.7891 C-6196.2915 10174.7734 -6196.3877 10174.1563 -6196.7734 10174.5176 C-6196.9727 10174.6582 -6196.8262 10174.6836 -6196.8311 10174.8574 C-6197.2656 10174.9102 -6197.3955 10175.0879 -6197.6753 10175.1152 C-6197.6177 10174.7754 -6198.1699 10175.082 -6197.8608 10174.7344 C-6197.7188 10174.9336 -6197.0903 10174.9141 -6196.9365 10174.5898 C-6197.0947 10174.1865 -6196.5952 10174.6465 -6196.5024 10174.2383 C-6196.8506 10174.2285 -6196.8335 10173.832 -6196.8896 10173.5723 C-6196.9863 10173.5537 -6197.0801 10173.6641 -6197.1377 10173.7041 C-6197.1787 10173.9492 -6197.0522 10173.9453 -6197.0449 10174.1973 C-6197.4336 10174.1309 -6197.8081 10174.2676 -6198.0225 10174.5059 C-6198.1523 10174.3848 -6198.1113 10174.1406 -6197.9575 10174.1172 C-6198.4199 10174.1895 -6198.9141 10174.1563 -6199.3535 10174.082 C-6199.0693 10174.4814 -6199.8433 10174.1758 -6199.6494 10174.5078 C-6199.4141 10174.5977 -6199.2119 10174.8818 -6199.3418 10175.0605 C-6199.4888 10175.0352 -6199.3369 10174.8857 -6199.3984 10174.8008 C-6199.5859 10175.0186 -6199.6895 10174.4512 -6199.8735 10174.7949 C-6199.4512 10174.666 -6199.7915 10174.3086 -6199.7139 10173.9961 C-6200.0186 10174.1719 -6199.7007 10173.7734 -6200.0024 10173.7734 C-6200.3057 10173.9473 -6200.6787 10174.084 -6201.0161 10174.1514 C-6201.4399 10173.8555 -6202.0898 10174.1465 -6202.4683 10174.1582 C-6202.6665 10174 -6202.5322 10173.6465 -6202.7471 10173.585 C-6202.9995 10173.5918 -6202.5601 10173.9668 -6202.9336 10173.8047 C-6202.8975 10173.7344 L-6203.0107 10173.8164 -6203.5825 10173.4941 -6203.6929 10174.002 C-6203.5776 10173.6191 L-6203.6475 10173.584 -6203.7119 10173.6719 -6203.7695 10173.7129 C-6203.7725 10173.5879 -6203.8535 10173.4746 -6203.7402 10173.3926 C-6203.9707 10173.1289 -6204.2241 10173.4346 -6204.4746 10173.4453 C-6204.3135 10173.6719 L-6204.7422 10173.8496 -6205.0293 10173.625 -6205.4443 10173.7041 C-6205.4316 10173.4824 L-6205.6787 10173.6152 L-6205.6182 10173.4004 -6205.8447 10173.2617 -6205.9751 10173.4414 C-6205.3335 10172.8984 L-6205.1553 10173.0293 -6205.5283 10173.166 -6205.4165 10173.3848 C-6205.3213 10173.5762 -6204.9375 10173.5156 -6204.8755 10173.3018 C-6205.0225 10173.2773 -6205.0293 10173.3262 -6205.1436 10173.4063 C-6205.1919 10173.0977 -6204.9688 10173.1094 -6204.8584 10172.9033 C-6204.9355 10172.916 -6205.0449 10172.8223 -6205.0615 10172.9199 C-6204.9102 10172.7695 -6204.7578 10172.7461 -6204.5059 10172.7383 C-6204.6763 10172.8594 -6204.4131 10172.9297 -6204.4775 10173.0176 C-6204.4575 10172.7461 -6204.2168 10172.6621 -6203.9053 10172.7383 C-6203.6831 10173.0527 -6203.3208 10172.5361 -6202.96 10172.623 C-6203.1064 10172.8984 -6203.2935 10173.1191 -6203.5127 10173.2305 C-6203.2861 10173.3682 -6203.2607 10173.2227 -6203.0337 10173.3613 C-6202.9238 10173.1563 -6202.8457 10172.8418 -6202.5503 10172.7168 C-6202.5342 10172.9199 L-6202.2666 10172.8164 -6202.2666 10172.5156 -6201.9258 10172.5723 C-6201.3418 10172.6719 -6200.7407 10172.6719 -6200.2949 10172.6973 C-6200.2783 10172.8994 L-6200.0303 10172.4658 -6199.4521 10172.7393 -6199.1182 10172.5469 C-6198.5503 10172.7422 -6197.8848 10172.3535 -6197.5938 10172.7031 C-6196.5913 10172.5469 -6195.7148 10172.3945 -6194.6768 10172.4688 C-6194.8516 10172.7637 L-6194.6655 10172.5469 -6194.7305 10172.9336 -6194.5479 10172.8896 C-6194.7578 10172.6543 -6194.2949 10172.584 -6194.1665 10172.4033 C-6193.7041 10172.6328 -6193.1104 10172.3828 -6192.7007 10172.1758 C-6192.6846 10172.3789 L-6192.2705 10171.998 -6191.7759 10172.332 -6191.2598 10172.3945 C-6191.2007 10172.4785 -6191.1074 10172.6689 -6190.9536 10172.6465 C-6190.6738 10172.3184 -6190.5273 10172.3418 -6190.1167 10172.1367 C-6189.8169 10172.1367 -6189.3301 10172.2178 -6189.0254 10172.3457 C-6187.8975 10171.8848 -6186.7456 10172.1797 -6185.5732 10171.9023 C-6185.4888 10172.1406 L-6184.3521 10171.6309 -6182.9541 10172.0938 -6181.9839 10171.832 C-6182.0776 10172.2393 L-6181.7734 10172.3652 -6181.3843 10172.1328 -6181.4619 10171.8438 C-6181.1567 10171.9688 -6180.7007 10171.6465 -6180.5068 10171.9814 C-6180.1953 10172.0566 -6180.1255 10171.793 -6179.8662 10171.7383 C-6179.2422 10171.8926 -6179.0107 10171.8574 -6178.4224 10171.7813 C-6178.5684 10171.7559 L-6178.6328 10171.8457 -6178.6387 10172.0186 -6178.4922 10172.0449 C-6178.2725 10171.9316 -6177.6846 10172.1543 -6177.9033 10171.668 C-6177.2754 10171.9492 -6176.4385 10171.4395 -6175.8271 10171.8184 C-6175.8789 10171.6855 -6175.7246 10171.6602 -6175.6602 10171.5703 C-6175.1089 10171.5645 -6174.5293 10171.8359 -6174.0898 10171.6094 C-6174.0024 10171.6758 -6174.2295 10171.8359 -6174.0049 10171.8496 C-6173.8721 10171.7988 -6174.0024 10171.6758 -6173.8384 10171.6016 C-6172.9453 10171.3535 -6172.0303 10171.8574 -6171.2188 10171.793 C-6169.7754 10171.5361 -6168.2695 10171.666 -6166.8867 10171.623 C-6166.9023 10171.7207 L-6166.4395 10171.3477 -6165.8159 10172.1025 -6165.4463 10171.541 C-6165.3369 10171.6338 -6165.0283 10171.585 -6165.1094 10171.7734 C-6164.7407 10171.5098 -6164.0771 10172.0215 -6163.5439 10171.6865 C-6163.5928 10171.6777 -6163.6211 10171.6973 -6163.6777 10171.7393 C-6163.1392 10171.9551 -6162.6641 10171.6602 -6162.0957 10171.8555 C-6162.1533 10171.8975 -6162.2583 10171.9277 -6162.2754 10172.0254 C-6162.0557 10172.2129 -6161.7549 10171.6133 -6161.6348 10172.084 C-6161.5088 10172.0801 -6161.5449 10171.8477 -6161.6221 10171.8613 C-6160.3779 10172.0449 -6159.0498 10171.7441 -6157.7549 10171.6367 C-6156.8271 10171.918 -6157.6982 10172.4297 -6156.9663 10172.0781 C-6156.9063 10172.1689 -6156.9229 10171.8984 -6156.9131 10171.9961 C-6156.6299 10171.8643 -6156.4717 10172.5215 -6156.2754 10172.2754 C-6156.3564 10171.9863 -6156.1445 10172.1133 -6156.1387 10171.9375 C-6155.5713 10172.125 -6155.4575 10172.3857 -6155.0098 10172.166 C-6155.0435 10172.3184 L-6154.5186 10171.8887 -6153.9102 10172.1191 -6153.4673 10171.623 C-6150.5728 10171.5332 -6147.7983 10171.2578 -6144.9761 10171.2002 C-6142.1865 10171.2949 -6139.4551 10171.0723 -6136.6221 10171.3359 C-6135.9585 10171.7354 -6135.9087 10171.7246 -6135.1797 10171.5625 C-6135.2095 10171.627 -6135.2549 10171.6426 -6135.2061 10171.7031 C-6135.1699 10171.375 -6134.6929 10171.6719 -6134.6235 10171.3594 C-6133.5762 10171.4199 -6132.6113 10171.3301 -6131.5337 10171.3281 C-6131.7041 10171.3633 -6131.7896 10171.6309 -6131.5869 10171.6094 C-6131.3755 10171.4004 L-6131.3408 10171.4922 L-6131.2021 10171.4434 -6131.0513 10171.2813 -6131.1943 10171.1758 C-6128.4873 10170.8926 -6125.8242 10171.5508 -6123.1729 10171.4697 C-6122.5435 10171.6064 -6121.6475 10171.4814 -6120.9629 10171.4141 C-6118.9355 10171.8516 -6117.1079 10172.2041 -6115.0479 10171.8984 C-6115.3169 10172.7461 -6116.1675 10172.9414 Vf-6206.2578 10172.7422 m-6206.1855 10172.9063 -6205.9497 10172.9961 -6206.1377 10173.2148 C-6206.1611 10173.0605 -6206.2822 10172.8887 -6206.2578 10172.7422 Cf-6199.9619 10174.4297 m-6199.9536 10174.3809 -6199.8721 10174.4961 -6199.8521 10174.5225 C-6199.9297 10174.5352 -6200.0024 10174.6729 -6200.0645 10174.5879 C-6199.9854 10174.5762 -6199.9976 10174.498 -6199.9619 10174.4297 Cf-6198.3521 10174.5273 m-6198.3765 10174.6729 -6198.7207 10174.7891 -6198.9238 10174.8066 C-6198.3521 10174.5273 Lf-6196.8521 10175.1289 m-6196.7227 10175.252 -6196.7583 10175.3193 -6196.9326 10175.3154 C-6196.9453 10175.2383 -6196.8877 10175.1992 -6196.8521 10175.1289 Cf-6196.7456 10174.7969 m-6196.6211 10174.793 -6196.5591 10174.8789 -6196.4985 10174.9629 C-6196.5029 10174.8369 -6196.7871 10175.041 -6196.7456 10174.7969 Cf-6193.4893 10175.2207 m-6193.4111 10175.209 -6193.2417 10175.0879 -6193.1689 10175.25 C-6193.2505 10175.1367 -6193.5498 10175.4346 -6193.4893 10175.2207 Cf-6191.9761 10175 m-6191.9272 10175.0098 -6191.9072 10175.0361 -6191.8506 10174.9961 C-6191.7607 10175.0625 -6191.8555 10175.1689 -6191.9312 10175.1826 C-6191.9761 10175 Lf-6164.4287 10174.4141 m-6164.5923 10174.4863 L-6164.5684 10174.3418 L-6164.4287 10174.4141 Lf-6152.3574 10174.4063 m-6152.1943 10174.3145 -6152.2441 10174.543 -6152.2168 10174.5645 C-6152.3643 10174.5801 -6152.1621 10174.3848 -6152.3574 10174.4063 Cf-6145.8486 10173.6777 m-6145.8984 10173.6816 L-6145.8818 10173.3828 L-6145.8486 10173.6777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9727 10175.5 m-6180.9727 10149.4717 L-6207 10149.4717 L-6207 10175.5 L-6180.9727 10175.5 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-6207 10158.1465 m-6180.9727 10158.1465 lS0.64 0.650477 0.701045 0.510735 K-6207 10166.8242 m-6180.9727 10166.8242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-6207 10162.4854 m-6180.9727 10162.4854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-6185.5742 10162.5117 m-6185.3442 10162.2402 -6185.6914 10161.9541 -6186 10161.7432 c-6186.1118 10161.666 -6186.5215 10161.8789 -6186.7466 10161.7129 c-6187.0439 10161.4951 -6187.1826 10161.4082 -6187.4824 10161.4141 c-6187.6455 10161.418 -6188.0435 10161.5479 -6188.1895 10161.5781 c-6188.5679 10161.6543 -6188.8022 10161.8516 -6189.3672 10161.7549 c-6189.7344 10161.6914 -6189.8286 10161.6006 -6189.9233 10161.6484 c-6190.1118 10161.79 -6190.2202 10162.0137 -6190.4258 10162.0625 c-6190.9575 10162.1895 -6191.3535 10162.2334 -6191.8818 10162.2227 c-6192.3047 10162.2129 -6193.4185 10162.2813 -6194.2866 10162.1816 c-6194.6226 10162.1416 -6194.6025 10161.7168 -6194.7695 10161.7129 c-6194.8618 10161.7109 -6194.7646 10162.0264 -6194.8306 10162.0469 c-6195.1694 10162.1533 -6195.4702 10161.0029 -6195.6943 10161.0723 c-6195.8047 10161.1074 -6195.5562 10161.6533 -6195.6729 10161.6816 c-6195.8975 10161.7373 -6196.2178 10160.7188 -6196.4321 10160.7813 c-6196.5635 10160.8184 -6196.2886 10161.2383 -6196.4375 10161.3066 c-6196.6655 10161.4111 -6196.9087 10160.5352 -6197.1064 10160.6338 C-6197.1543 10160.6816 -6196.7295 10161.4375 -6197.1685 10161.3789 c-6197.2871 10161.3613 -6197.5054 10160.8135 -6197.5801 10160.8398 c-6197.6919 10160.8799 -6197.3535 10161.3018 -6197.4897 10161.4277 C-6197.7681 10161.6543 -6198.3711 10160.6631 -6198.4575 10160.7344 c-6198.5791 10160.8359 -6198.1279 10161.5977 -6198.2695 10161.666 C-6198.4497 10161.9297 -6199.0142 10161.0527 -6199.0889 10161.1016 c-6199.1777 10161.1602 -6198.9058 10161.5381 -6198.8799 10161.7334 c-6198.8545 10161.9277 -6198.9966 10162.0615 -6199.2144 10162.0098 c-6199.4736 10161.9473 -6199.8696 10161.1416 -6199.9727 10161.2354 C-6200.0791 10161.291 -6199.8682 10161.5781 -6199.7954 10161.8125 c-6199.7583 10161.9277 -6199.8882 10162.1016 -6200.0298 10162.1016 c-6200.3135 10162.1494 -6200.6255 10161.498 -6200.7065 10161.6025 c-6200.7524 10161.6621 -6200.5898 10161.9902 -6200.7295 10162.0879 c-6200.8994 10162.2061 -6201.3115 10161.7383 -6201.4521 10161.793 C-6201.5361 10161.8418 -6201.4126 10162.0967 -6201.4927 10162.1533 c-6201.7295 10162.3193 -6202.0039 10161.9209 -6202.0513 10161.9688 C-6202.1167 10161.9912 -6202.1201 10162.0361 -6202.2793 10162.1406 c-6202.4736 10162.2676 -6202.5254 10162.3486 -6202.5425 10162.4648 c-6202.5654 10162.583 -6202.3135 10162.875 -6202.1655 10162.8496 c-6201.8223 10162.79 -6201.8662 10163.3496 -6201.6328 10163.2158 c-6201.5679 10163.1797 -6201.6592 10162.7588 -6201.4199 10162.7656 c-6201.0488 10162.7783 -6200.9858 10163.3213 -6200.7817 10163.3105 c-6200.6406 10163.3037 -6200.8521 10162.6836 -6200.6328 10162.7607 c-6200.4751 10162.8164 -6200.0063 10163.8018 -6199.9795 10163.71 c-6199.8975 10163.4424 -6200.0703 10162.8984 -6199.9409 10162.9082 c-6199.7568 10162.9229 -6199.5078 10163.8174 -6199.2544 10163.9375 c-6199.1826 10163.9727 -6199.3774 10163.1006 -6199.1958 10163.0967 C-6199.0898 10163.1465 -6198.7578 10163.9492 -6198.6274 10163.998 C-6198.5591 10163.9824 -6198.5879 10163.625 -6198.5176 10163.6045 c-6198.4688 10163.5898 -6198.2817 10164.0654 -6198.21 10164.0234 c-6198.1055 10163.9629 -6198.2471 10163.4922 -6198.0889 10163.4229 c-6197.9175 10163.3486 -6197.4878 10164.3926 -6197.3486 10164.2979 c-6197.2769 10164.25 -6197.3574 10163.71 -6197.21 10163.7461 c-6197.0718 10163.7783 -6196.9414 10164.1143 -6196.8081 10164.1426 c-6196.7295 10164.1582 -6196.7935 10163.6914 -6196.7495 10163.6738 c-6196.5889 10163.6152 -6196.2329 10164.1719 -6196.0688 10164.0234 c-6195.8584 10163.835 -6195.9395 10163.4697 -6195.8345 10163.4824 c-6195.6274 10163.5059 -6195.4912 10163.7432 -6195.4146 10163.6836 c-6195.2642 10163.5684 -6195.3281 10163.2793 -6195.0527 10163.1924 c-6194.8975 10163.1426 -6194.7935 10163.4346 -6194.7495 10163.4307 c-6194.6738 10163.4277 -6194.6782 10163.3301 -6194.6665 10163.2246 c-6194.6328 10162.9609 -6194.6064 10162.8994 -6194.4878 10162.877 c-6194.0854 10162.8535 -6193.5625 10162.7842 -6193.1807 10162.7754 c-6192.6274 10162.7607 -6191.2607 10162.7373 -6191.1182 10162.7373 c-6191 10162.7129 -6190.7432 10162.8945 -6190.6689 10162.9609 c-6190.4678 10163.1455 -6190.2998 10163.3594 -6189.9858 10163.6201 c-6189.8906 10163.7012 -6189.8081 10163.6807 -6189.7378 10163.6563 c-6189.5249 10163.585 -6189.4585 10163.5332 -6189.2202 10163.502 c-6188.9175 10163.459 -6188.4272 10163.5488 -6188.1245 10163.6426 c-6187.6035 10163.8018 -6187.5264 10163.8242 -6187.0977 10163.7754 c-6186.6992 10163.7295 -6186.0586 10163.6582 -6186.0479 10163.3105 c-6186.0415 10163.0957 -6185.9414 10162.9434 -6185.5742 10162.5117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9722 10175.5 m-6180.9722 10149.4727 L-6207 10149.4727 L-6207 10175.5 L-6180.9722 10175.5 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-6189.6455 10162.4893 m-6180.9736 10162.4893 lS-6193.9839 10175.5 m-6193.9839 10166.8242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-6189.7202 10158.1504 m-6180.9727 10158.1504 lS-6198.3232 10175.499 m-6198.3232 10166.1455 lS0.64 0.650477 0.701045 0.510735 K-6189.6504 10175.499 m-6189.6504 10173.0869 l-6186.9937 10172.8633 -6185.3096 10171.1602 v-6183.6064 10169.4336 -6183.3774 10166.8281 y-6180.9727 10166.8281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-6197.8418 10159.6855 m-6197.8418 10159.75 -6197.8218 10159.791 -6197.7783 10159.791 c-6197.6943 10159.791 -6197.4634 10159.4541 -6197.3994 10159.4541 c-6197.3154 10159.4541 -6197.2729 10159.4961 -6197.2729 10159.6016 c-6197.2729 10159.6855 -6197.5264 10160.5928 y-6197.5264 10160.6338 -6197.5264 10160.6338 -6197.5049 10160.6338 c-6197.4414 10160.6338 -6197.0615 10160.0869 -6196.9351 10160.0869 c-6196.9146 10160.0869 -6196.8936 10160.1074 -6196.8936 10160.1289 c-6197.1675 10161.0352 -6197.1675 10161.2256 v-6197.1675 10161.2891 -6197.1675 10161.3105 -6197.1465 10161.3105 c-6197.1055 10161.3105 -6196.6826 10160.7402 -6196.5562 10160.7402 c-6196.5352 10160.7402 -6196.5137 10160.7607 -6196.5137 10160.7822 c-6196.5137 10160.8457 -6196.7666 10161.584 -6196.7666 10161.752 c-6196.7666 10161.7949 -6196.7666 10161.7949 -6196.7446 10161.7949 c-6196.6826 10161.7949 -6196.4722 10161.584 -6196.4297 10161.584 c-6196.4082 10161.584 -6196.3882 10161.6055 -6196.3882 10161.626 c-6196.3882 10161.6465 -6196.4927 10162.0059 -6196.4927 10162.0898 c-6196.4927 10162.1113 -6196.4927 10162.1113 -6196.4722 10162.1113 c-6196.4297 10162.1113 -6196.0918 10161.752 -6196.0078 10161.752 c-6195.9658 10161.752 -6195.9233 10161.7949 -6195.9233 10161.8789 c-6195.9233 10162.0273 -6196.1138 10162.7441 -6196.1138 10162.7861 c-6196.1138 10162.8701 -6196.0918 10162.9121 -6196.0498 10162.9121 c-6195.9658 10162.9121 -6195.7119 10162.5957 -6195.6494 10162.5957 c-6195.5854 10162.5957 -6195.5439 10162.6162 -6195.5439 10162.6807 c-6195.5854 10163.1016 L-6195.5854 10163.166 -6195.5854 10163.1855 -6195.5654 10163.1855 c-6195.5225 10163.1855 -6195.2915 10162.8916 -6195.2065 10162.8916 c-6195.1006 10162.8916 -6195.1006 10163.377 -6195.1006 10163.4395 c-6195.1006 10163.5449 -6195.0166 10163.6289 -6194.8896 10163.6289 c-6194.8057 10163.6289 -6194.4678 10163.3975 -6194.4473 10163.3975 c-6194.3623 10163.3975 -6194.3198 10163.8398 -6194.2568 10163.8398 c-6194.1943 10163.8398 -6193.9199 10163.7129 -6193.8564 10163.7129 c-6193.6455 10163.7129 -6193.6035 10163.7988 -6193.6035 10163.9668 c-6193.6255 10164.1143 L-6193.6255 10164.1563 -6193.6035 10164.1563 -6193.5835 10164.1563 c-6193.4985 10164.1563 -6193.2241 10163.8818 -6193.1392 10163.8818 c-6192.9287 10163.8818 -6190.8198 10165.9492 -6190.5454 10166.2227 c-6190.3984 10166.3906 -6190.3984 10166.6865 -6190.3984 10166.8135 c-6190.3984 10167.6777 -6190.3984 10167.7617 -6190.2295 10167.8457 c-6189.5977 10168.0996 -6189.5127 10168.2471 -6188.7334 10169.5332 c-6188.6479 10169.6807 -6187.7407 10170.293 -6187.5942 10170.293 c-6187.4878 10170.293 -6187.1094 10170.0391 -6187.0239 10170.0391 c-6186.9194 10170.0391 -6186.8135 10170.1025 -6186.8135 10170.2705 c-6186.8135 10170.7139 -6187.3408 10171.2207 -6187.9312 10171.2207 c-6188.7534 10171.2207 -6189.0913 10170.5234 -6189.1338 10170.125 c-6189.1543 10169.9766 -6189.2393 10169.8916 -6189.3447 10169.8916 c-6189.3862 10169.8916 -6189.4287 10169.9121 -6189.4702 10169.9766 c-6189.9561 10170.7773 -6190.9473 10171.2207 -6191.7065 10171.2207 c-6192.7393 10171.2207 -6193.8774 10170.5879 -6194.3418 10170.3145 c-6194.7842 10170.0615 -6195.4814 10169.8916 -6195.8809 10169.8916 c-6196.3242 10169.8916 -6196.3662 10170.0391 -6196.3662 10170.293 c-6196.3662 10170.4404 -6195.9023 10170.8818 -6195.9023 10171.0098 c-6195.9023 10171.1357 -6196.0498 10171.2207 -6196.4082 10171.2207 c-6196.8936 10171.2207 -6197.5679 10170.5029 -6197.5679 10169.7236 c-6197.5679 10169.1113 -6196.7666 10168.585 -6196.3022 10168.585 c-6195.3755 10168.585 -6195.0942 10168.9434 -6194.5264 10169.4072 c-6194.4414 10169.4697 -6194.3774 10169.4922 -6194.3359 10169.4922 c-6194.1895 10169.4922 -6194.1895 10168.3945 -6194.1895 10168.2695 c-6194.1895 10168.1201 -6194.2729 10168.0576 -6194.3774 10168.0576 c-6196.7822 10168.0576 -6201.6592 10166.834 -6203.3672 10160.6777 c-6203.4297 10160.4658 -6203.5361 10160.3613 -6203.6406 10160.3613 c-6203.7881 10160.3613 -6204.7793 10161.2041 -6204.7793 10162.7861 c-6204.7793 10164.6201 -6203.5767 10165.5898 -6202.9873 10165.5898 c-6202.8398 10165.5898 -6202.6494 10165.5693 -6202.6494 10165.4209 c-6202.6494 10165.3584 -6202.6929 10165.2949 -6202.7759 10165.1895 c-6203.1143 10164.8535 -6203.3672 10164.2197 -6203.3672 10163.9033 c-6203.3672 10163.6914 -6203.2607 10163.5234 -6203.1143 10163.5234 c-6202.9033 10163.5234 -6202.5654 10164.4727 -6202.46 10164.6201 c-6202.3335 10164.8311 -6201.9546 10165.2109 -6201.2378 10165.7383 c-6200.4995 10166.2637 -6199.0654 10167.5723 -6199.0654 10168.8369 c-6199.0654 10170.209 -6200.1191 10171.1152 -6200.9209 10171.1152 c-6201.7007 10171.1152 -6202.6714 10170.5879 -6203.0713 10170.1025 c-6203.7041 10169.3652 -6204.3154 10168.7949 -6204.8218 10168.7949 c-6205.1592 10168.7949 -6205.3066 10169.0059 -6205.3066 10169.2168 c-6205.3066 10169.5537 -6205.0537 10169.7861 -6204.5479 10169.8281 c-6203.9575 10169.8711 -6203.8936 10170.293 -6203.8936 10170.6289 c-6203.8936 10170.9033 -6204.4209 10171.2207 -6204.8433 10171.2207 c-6205.4751 10171.2207 -6206.2974 10170.5234 -6206.2974 10168.6904 c-6206.2974 10167.1924 -6205.0537 10166.7295 -6204.5679 10166.7295 c-6204.1265 10166.7295 -6203.4722 10166.8135 -6203.0928 10167.1504 c-6201.8066 10168.3535 -6201.1318 10168.5625 -6200.5835 10168.5625 c-6200.3721 10168.5625 -6200.2881 10168.5625 -6200.2881 10168.7109 c-6200.2881 10169.0273 -6201.0474 10169.2168 -6201.1318 10169.2383 c-6201.3423 10169.3008 -6201.5103 10169.5332 -6201.5103 10169.7441 c-6201.5103 10170.2295 -6201.2378 10170.25 -6200.8774 10170.25 c-6200.5215 10170.25 -6199.8042 10169.8916 -6199.8042 10168.6904 c-6199.8042 10167.6992 -6200.9424 10166.5391 -6201.4058 10166.3076 c-6201.7007 10166.1377 -6202.5874 10166.1602 -6202.9458 10166.1172 c-6203.6406 10166.0322 -6205.4121 10165.085 -6205.4121 10162.5957 c-6205.4336 10161.1826 -6204.1265 10159.8555 -6203.8511 10159.666 c-6203.6826 10159.5586 -6203.5986 10159.4326 -6203.5986 10159.2637 c-6203.5986 10159.0527 -6203.6626 10156.1221 -6203.9995 10156.1221 c-6204.4424 10156.1221 -6204.5054 10156.1221 -6204.5054 10156.3135 c-6204.21 10157.4082 -6204.21 10157.6406 v-6204.21 10157.957 -6204.4424 10159.4326 -6205.3066 10159.4326 c-6205.5806 10159.4326 -6206.0449 10159.2002 -6206.0449 10158.8848 c-6206.0449 10158.5898 -6205.3486 10157.3877 -6205.3486 10157.1133 c-6205.3486 10156.6279 -6205.3921 10156.6074 -6206.0654 10155.9961 c-6206.2559 10155.8486 -6206.3193 10155.7227 -6206.3193 10155.5313 c-6206.3193 10155.3633 -6206.2134 10155.2354 -6206.0449 10155.2354 c-6205.8975 10155.2354 -6205.3281 10155.5117 -6205.2017 10155.5313 c-6205.0752 10155.5313 -6204.8433 10155.5527 -6204.6538 10155.5527 c-6204.2734 10155.5527 -6204.0845 10155.4258 -6204.0845 10155.2998 c-6204.0845 10155.0674 -6204.0845 10154.3936 -6204.9263 10152.9375 c-6205.1167 10152.6006 -6206.2974 10151.2725 -6206.2974 10150.9346 c-6206.2974 10150.7656 -6206.2134 10150.7461 -6206.1089 10150.7461 c-6205.9185 10150.7461 -6205.4966 10151.167 -6205.3706 10151.3145 c-6204.1265 10152.6426 -6203.3042 10154.0762 -6202.9238 10155.3418 c-6202.8398 10155.6582 -6202.7344 10155.5742 -6202.5654 10155.5957 c-6200.4155 10156.1016 -6198.3271 10158.6104 -6198.3271 10158.6318 c-6198.4326 10158.9053 -6198.4326 10158.9688 v-6198.4326 10159.0957 -6198.3271 10159.1172 -6198.3057 10159.1172 c-6198.2432 10159.1172 -6198.0527 10158.9053 -6198.0103 10158.9053 c-6197.9058 10158.9053 -6197.7783 10158.9902 -6197.7783 10159.1377 C-6197.8418 10159.6855 lf0 D-6201.1104 10158.1895 m-6200.5215 10158.1895 -6200.0986 10158.2949 -6199.6982 10158.5684 c-6199.6553 10158.5898 -6199.6138 10158.6104 -6199.5928 10158.6104 c-6199.5498 10158.6104 -6199.5498 10158.5898 -6199.5498 10158.5469 c-6199.5498 10158.126 -6201.4272 10156.166 -6202.5654 10156.166 c-6202.6289 10156.166 -6202.6714 10156.207 -6202.6714 10156.2695 c-6202.6714 10156.46 -6202.5874 10158.4629 -6202.2495 10158.4629 c-6202.1865 10158.4629 -6202.1016 10158.4414 -6202.0386 10158.4004 c-6201.7007 10158.252 -6201.4902 10158.1895 -6201.1104 10158.1895 cf-6200.5835 10160.9512 m-6200.5835 10160.5293 -6200.5625 10160.0654 -6199.8662 10160.0654 c-6199.2334 10160.0654 -6198.6431 10160.7197 -6198.4961 10160.8672 c-6198.4326 10160.9092 -6198.3906 10160.9297 -6198.3486 10160.9297 c-6198.3271 10160.9297 -6198.2847 10160.8877 -6198.2847 10160.8457 c-6198.2847 10160.4023 -6199.6553 10158.7373 -6201.0049 10158.7373 c-6201.2578 10158.7373 -6202.2705 10158.9053 -6202.2705 10159.4541 c-6202.2705 10159.707 -6201.8906 10161.0781 -6201.2793 10162.1533 c-6199.9087 10164.6416 -6195.7119 10166.2002 -6193.8145 10166.2002 c-6192.9072 10166.2227 -6192.6118 10165.9063 -6192.4863 10165.8848 c-6192.4648 10165.8848 -6192.4438 10165.8643 -6192.4233 10165.8643 c-6192.3174 10165.8643 -6192.1904 10165.9277 -6192.1904 10166.0752 c-6192.1904 10166.0967 -6192.2119 10166.0967 v-6192.3594 10167.2344 -6192.4014 10167.6357 -6192.4014 10168.8994 c-6192.4014 10170.293 -6192.4014 10170.4189 -6191.4321 10170.4189 c-6190.1455 10170.4189 -6189.8506 10169.3438 -6189.8506 10169.1113 c-6189.8506 10168.6904 -6190.4399 10168.3945 -6190.5889 10168.3945 c-6190.7358 10168.3945 -6190.9058 10168.502 -6190.9058 10168.6904 c-6190.9058 10168.9854 -6190.9473 10169.1328 -6191.2207 10169.1328 c-6191.4951 10169.1328 -6191.4951 10168.7744 -6191.4951 10168.668 c-6191.4951 10168.416 -6191.3896 10168.1631 -6191.1782 10168.0361 c-6190.7998 10167.7832 -6190.7998 10167.3828 -6190.7998 10167.1719 c-6190.7998 10167.0664 -6190.7998 10166.9395 -6190.8198 10166.834 c-6190.8418 10166.666 -6192.7817 10164.6201 -6193.0977 10164.6201 c-6193.2446 10164.6201 -6193.5615 10164.7666 -6194.4258 10164.7666 c-6196.5767 10164.7666 -6197.5474 10163.0391 -6197.7378 10162.5117 c-6197.9897 10161.7949 -6198.7915 10161.499 -6199.0225 10161.499 c-6199.2129 10161.499 -6199.2129 10161.542 -6199.2129 10161.9424 c-6199.2129 10162.0273 -6199.4238 10162.3633 y-6199.4238 10162.5537 -6198.3906 10162.8066 -6198.3906 10162.9961 c-6198.3906 10163.166 -6198.5801 10163.1855 -6198.7271 10163.1855 c-6198.8115 10163.1855 -6199.8882 10163.1855 -6200.3306 10162.3633 c-6200.5415 10161.9629 -6200.5835 10161.3945 -6200.5835 10160.9512 cf1 D-6196.4927 10158.6953 m-6196.4927 10158.6514 -6196.5137 10158.6318 -6196.5352 10158.6318 c-6196.5986 10158.6318 -6196.7666 10158.9688 -6196.8506 10158.9688 c-6196.9146 10158.9688 -6196.9995 10158.8848 -6197.0415 10158.7783 c-6197.0615 10158.6953 -6197.1255 10158.2305 -6197.21 10158.2305 c-6197.2524 10158.2305 -6197.4209 10158.4629 -6197.4634 10158.4629 c-6197.6104 10158.4629 -6197.7158 10158.2305 -6197.7158 10158.0215 c-6197.7158 10157.915 -6197.7783 10157.915 -6197.9263 10157.915 c-6198.5166 10157.915 -6200.1406 10155.7432 -6200.5625 10153.9922 c-6200.6055 10153.8242 -6200.5835 10153.6768 -6200.8994 10153.5703 c-6203.0713 10152.834 -6205.5176 10150.6816 -6205.5176 10150.5557 c-6205.5176 10150.4082 -6205.4336 10150.3242 -6205.3066 10150.3242 c-6205.2432 10150.3242 -6205.1592 10150.3242 -6204.6538 10150.6602 c-6203.7681 10151.251 -6201.7217 10152.5381 -6200.8994 10152.5381 c-6200.6265 10152.5381 -6200.6055 10152.1797 -6200.6055 10151.9258 c-6200.6055 10151.7354 -6200.6265 10151.5039 -6200.6265 10151.3574 c-6200.6465 10151.083 -6200.9634 10150.7656 -6200.9634 10150.5977 c-6200.9634 10150.4502 -6200.8154 10150.3447 -6200.6465 10150.3447 c-6200.4575 10150.3447 -6200.3306 10150.3662 -6200.1606 10150.5557 c-6199.8662 10150.8926 -6199.7402 10151.041 -6199.4238 10151.041 c-6199.1914 10151.041 -6198.1377 10150.3242 -6197.8838 10150.3242 c-6197.5679 10150.3242 -6197.1895 10150.8086 -6197.1895 10151.1045 c-6197.1895 10151.8418 -6198.0942 10152.4326 -6198.6431 10152.4326 c-6199.0225 10152.4326 -6199.4438 10152.3066 -6199.6353 10152.0742 c-6199.6982 10152.0098 -6199.7607 10151.9688 -6199.8242 10151.9688 c-6199.9937 10151.9688 -6200.1191 10152.4326 -6200.1191 10152.4746 c-6200.1191 10152.8975 -6197.2729 10152.959 -6196.9146 10152.959 c-6196.7666 10152.959 -6196.6401 10152.875 -6196.5352 10152.7061 c-6196.3447 10152.4121 -6195.1855 10151.1895 -6193.6255 10151.1895 c-6191.79 10151.1895 -6190.0825 10152.4521 -6190.0825 10154.3506 c-6190.0825 10154.457 -6190.1245 10155.0039 -6190.1245 10155.0264 c-6190.1245 10155.0898 -6189.0063 10156.8389 -6187.6782 10156.8389 c-6186.6245 10156.8389 -6186.2656 10156.25 -6186.2656 10155.7637 c-6186.2656 10155.5313 -6186.3711 10154.8789 -6186.8984 10154.8789 c-6187.1094 10154.8789 -6187.2144 10155.0898 -6187.2144 10155.4688 c-6187.2144 10155.5527 -6187.0039 10155.9326 -6187.0039 10156.0381 c-6187.0039 10156.0801 -6187.0239 10156.1016 -6187.0879 10156.1016 c-6187.4258 10156.1016 -6187.9521 10155.7432 -6188.1846 10155.0898 c-6188.4595 10154.373 -6188.8594 10153.6768 -6189.1958 10153.2754 c-6189.5127 10152.918 -6189.6182 10152.3262 -6189.6182 10151.9893 c-6189.6182 10151.5039 -6189.1338 10150.3447 -6187.4878 10150.3447 c-6186.2871 10150.3447 -6185.4434 10151.083 -6185.4434 10151.6943 c-6185.4434 10152.3066 -6185.7598 10152.6855 -6186.2026 10152.6855 c-6186.6455 10152.6855 -6186.9824 10152.3477 -6186.9824 10152.0098 c-6186.9824 10151.3359 -6187.1514 10151.1895 -6187.4878 10151.1895 c-6187.6992 10151.1895 -6187.8896 10151.3145 -6187.8896 10151.6309 c-6187.8896 10151.8633 -6187.8896 10152.2422 -6186.3711 10153.5078 c-6185.8857 10153.9082 -6185.4214 10154.6055 -6185.4214 10155.3848 c-6185.4214 10156.1445 -6186.4561 10157.3447 -6187.6362 10157.3447 c-6188.8594 10157.3447 -6189.6401 10156.5654 -6190.2515 10155.8486 c-6190.5454 10155.5117 -6191.9814 10153.8242 -6192.0439 10153.8018 c-6192.2334 10153.6543 -6192.3174 10153.5293 -6192.3174 10153.4023 c-6192.3174 10153.2969 -6192.2119 10153.1914 -6192.0854 10153.1914 c-6191.8535 10153.1914 -6190.9058 10154.1406 -6190.8198 10154.1406 c-6190.7568 10154.1406 -6190.7153 10154.0762 -6190.7153 10153.9922 c-6190.7153 10153.2334 -6191.8535 10151.7578 -6193.6255 10151.7578 c-6195.1006 10151.7578 -6195.9863 10152.875 -6195.9863 10152.918 c-6195.9863 10153.0439 -6195.8394 10153.1689 -6195.5225 10153.2334 c-6191.6426 10153.9717 -6188.3955 10157.5215 -6188.3955 10162.1377 c-6188.3955 10162.2441 -6188.2256 10162.2705 -6188.0786 10162.2705 c-6187.7202 10162.2705 -6187.0879 10162.3496 -6187.0879 10162.0762 c-6187.0879 10161.9697 -6187.1294 10161.8438 -6187.1934 10161.7168 c-6187.5518 10161.1465 -6187.8682 10160.9727 -6187.8682 10160.0215 c-6187.8682 10159.5586 -6187.4878 10159.0322 -6186.8984 10159.0322 c-6185.8657 10159.0322 -6185.4214 10160.0654 -6185.4214 10160.2969 c-6185.4214 10160.4658 -6185.5073 10160.5293 -6185.5903 10160.5293 c-6185.7178 10160.5293 -6186.2241 10160.002 -6186.3711 10160.002 c-6186.5615 10160.002 -6186.7085 10160.0439 -6186.7085 10160.5293 c-6186.7085 10160.8672 -6185.4214 10164.5781 -6185.4214 10165.3789 c-6185.4214 10165.9492 -6185.7598 10166.6455 -6186.6455 10167.1504 c-6186.6875 10167.1719 -6186.7085 10167.1924 -6186.7085 10167.2344 c-6186.7085 10167.3184 -6186.5615 10167.4248 -6186.4126 10167.4658 c-6185.8018 10167.6357 -6185.4214 10167.7412 -6185.4214 10168.6904 c-6185.4214 10169.0488 -6185.7598 10169.7236 -6186.0127 10169.7236 c-6186.2026 10169.7236 -6186.2026 10169.6807 -6186.2026 10169.3223 c-6186.2026 10169.1748 -6186.2446 10169.0693 -6186.3926 10168.9639 c-6186.7085 10168.7529 -6186.7295 10168.7109 -6186.8135 10168.2266 c-6186.8774 10167.9102 -6187.0039 10167.8242 -6188.1426 10167.1924 c-6188.5854 10166.9189 -6188.6904 10166.6865 -6188.7744 10166.4551 c-6188.8594 10166.2637 -6188.9233 10166.2637 -6189.4287 10166.2637 c-6189.9561 10166.2637 -6192.5073 10163.5449 -6192.5073 10163.418 c-6192.5073 10163.3555 -6192.3809 10163.0596 -6192.3809 10162.9961 c-6192.3809 10162.9336 -6192.4014 10162.8916 -6192.4438 10162.8916 c-6192.4863 10162.8916 -6192.6338 10163.1016 -6192.6758 10163.1016 c-6192.7817 10163.1016 -6192.7817 10162.9121 -6192.7817 10162.7637 c-6192.7817 10162.6602 -6192.5703 10162.0898 -6192.5703 10161.9424 c-6192.5703 10161.8584 -6192.5918 10161.7949 -6192.6338 10161.7949 c-6192.7178 10161.7949 -6192.9072 10162.2578 -6192.9922 10162.2578 c-6193.0342 10162.2578 -6193.0762 10162.2168 -6193.0762 10162.0898 c-6193.0762 10161.9424 -6192.8862 10161.2256 y-6192.8862 10161.1621 -6192.9072 10161.0566 -6192.9502 10161.0566 c-6193.0342 10161.0566 -6193.1826 10161.457 -6193.2666 10161.457 c-6193.3286 10161.457 -6193.3926 10161.373 -6193.3926 10161.2256 c-6193.3926 10161.1406 -6193.2446 10160.7197 -6193.2446 10160.6143 c-6193.2446 10160.5508 -6193.2666 10160.4863 -6193.3086 10160.4863 c-6193.3506 10160.4863 -6193.5835 10161.0996 -6193.7095 10161.0996 c-6193.7935 10161.0996 -6193.8994 10160.9922 -6193.8994 10160.8877 c-6193.8994 10160.8037 -6193.7729 10160.4453 -6193.7729 10160.3613 c-6193.7729 10160.3184 -6193.7729 10160.2969 -6193.7935 10160.2969 c-6193.8774 10160.2969 -6194.0254 10160.7822 -6194.1104 10160.7822 c-6194.3418 10160.7822 -6194.3623 10160.3613 -6194.3623 10160.1709 c-6194.3623 10160.0869 -6194.2998 10159.75 -6194.2998 10159.6855 c-6194.2998 10159.623 -6194.3198 10159.6016 -6194.3418 10159.6016 c-6194.4897 10159.6016 -6194.6782 10160.4023 -6194.8271 10160.4023 c-6195.0386 10160.4023 -6195.0386 10160.2129 -6195.0386 10159.9814 c-6195.0166 10159.4541 L-6195.0166 10159.4326 -6195.0386 10159.4121 y-6195.0586 10159.4121 -6195.1006 10159.4326 -6195.1226 10159.4961 c-6195.1855 10159.707 -6195.3115 10160.1289 -6195.5225 10160.1289 c-6195.6694 10160.1289 -6195.8174 10159.96 -6195.8174 10159.8135 c-6195.8174 10159.5801 -6195.7119 10159.2002 -6195.7119 10158.9688 c-6195.7119 10158.9053 -6195.7334 10158.8848 -6195.7754 10158.8848 c-6195.8608 10158.8848 -6195.9863 10159.3262 -6196.0278 10159.4121 c-6196.0918 10159.4961 -6196.1553 10159.5176 -6196.2192 10159.5176 c-6196.5352 10159.5176 -6196.5352 10159.2002 -6196.5352 10159.0527 C-6196.4927 10158.6953 lf0 D-6197.8633 10154.3301 m-6197.8633 10154.0977 -6199.8042 10153.9082 -6199.8662 10153.9082 c-6199.9722 10153.9082 -6200.0352 10153.9717 -6200.0352 10154.0762 c-6200.0352 10154.9414 -6198.2847 10157.1768 -6197.8633 10157.1768 c-6197.7998 10157.1768 -6197.7783 10157.1563 -6197.7783 10157.0928 c-6198.2002 10155.8486 -6198.2002 10155.5957 v-6198.2002 10155.2158 -6198.0942 10154.9629 -6197.9058 10154.541 c-6197.8838 10154.457 -6197.8633 10154.3936 -6197.8633 10154.3301 cf-6189.1338 10165.7793 m-6188.9858 10165.7793 -6188.4795 10165.2744 -6188.3325 10165.2744 c-6188.2065 10165.2744 -6188.0791 10165.3584 -6188.0791 10165.5059 c-6188.0791 10165.5898 -6188.2695 10166.0322 -6188.2695 10166.1377 c-6188.2695 10166.4961 -6187.8896 10166.793 -6187.5098 10166.793 c-6187.1094 10166.793 -6185.9702 10166.4756 -6185.9702 10165.252 c-6185.9702 10164.1563 -6186.3926 10164.1563 -6188.0366 10164.1563 c-6188.3955 10164.1563 -6190.0615 10164.3457 -6190.3145 10164.3457 c-6190.4399 10164.3457 -6190.4834 10164.1768 -6190.4834 10164.0498 c-6190.4834 10164.0088 -6190.4834 10163.9668 -6190.4614 10163.9453 c-6190.3984 10163.5664 -6190.1675 10163.0176 -6190.1675 10162.6377 c-6190.1675 10158.1895 -6194.2998 10154.3301 -6196.7666 10154.3301 c-6197.4209 10154.3301 -6197.6519 10155.1318 -6197.6519 10155.5527 c-6197.6519 10157.2822 -6195.6694 10158.3145 -6195.4175 10158.3145 c-6195.3545 10158.3145 -6195.3335 10158.2949 -6195.3335 10158.252 c-6195.3335 10158.21 -6195.3545 10158.168 -6195.3975 10158.126 c-6195.5225 10157.957 -6196.0498 10157.3447 -6196.0498 10156.7129 c-6196.0498 10156.375 -6195.7554 10155.9326 -6194.9951 10155.9326 c-6193.7305 10155.9326 -6193.1826 10157.2822 -6193.1826 10157.6406 c-6193.1826 10157.7891 -6193.2446 10157.999 -6193.4561 10157.999 c-6193.6035 10157.999 -6194.0049 10157.3447 -6194.1519 10157.3447 c-6194.2158 10157.3447 -6194.4473 10157.4717 -6194.5103 10157.4717 c-6194.5942 10157.4717 -6194.6582 10157.4512 -6194.7422 10157.4512 c-6194.8057 10157.4512 -6194.8481 10157.5137 -6194.8481 10157.6191 c-6194.8481 10157.9785 -6194.3623 10158.5469 -6193.8774 10158.8008 c-6192.9722 10159.2637 -6191.6226 10160.5928 -6191.6226 10162.0479 c-6191.6226 10162.4688 -6191.6846 10162.8701 -6191.6846 10163.207 c-6191.6846 10163.7559 -6190.7568 10164.6201 -6189.8081 10165.5059 c-6189.6401 10165.6533 -6189.3862 10165.7793 -6189.1338 10165.7793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9722 10175.5 m-6180.9722 10149.4727 L-6207 10149.4727 L-6207 10175.5 L-6180.9722 10175.5 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-6189.6455 10162.4893 m-6180.9736 10162.4893 lS-6193.9839 10175.5 m-6193.9839 10166.8242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-6189.7202 10158.1504 m-6180.9727 10158.1504 lS-6198.3232 10175.5 m-6198.3232 10166.1455 lS0.7084 0.636438 0.515526 0.381872 K-6189.6504 10175.5 m-6189.6504 10173.0869 l-6186.9937 10172.8633 -6185.3096 10171.1602 v-6183.6064 10169.4336 -6183.3774 10166.8281 y-6180.9727 10166.8281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-6197.7783 10159.1377 m-6197.7783 10158.9902 -6197.9058 10158.9053 -6198.0103 10158.9053 c-6198.0527 10158.9053 -6198.2432 10159.1172 -6198.3057 10159.1172 c-6198.3271 10159.1172 -6198.4326 10159.0957 -6198.4326 10158.9688 c-6198.4326 10158.9053 -6198.3271 10158.6318 y-6198.3271 10158.6104 -6200.4155 10156.1016 -6202.5654 10155.5957 c-6202.7344 10155.5742 -6202.8398 10155.6582 -6202.9238 10155.3418 c-6203.3042 10154.0762 -6204.1265 10152.6426 -6205.3706 10151.3145 c-6205.4966 10151.168 -6205.9185 10150.7461 -6206.1089 10150.7461 c-6206.2134 10150.7461 -6206.2974 10150.7656 -6206.2974 10150.9346 c-6206.2974 10151.2725 -6205.1167 10152.6006 -6204.9263 10152.9375 c-6204.0845 10154.3936 -6204.0845 10155.0674 -6204.0845 10155.2998 c-6204.0845 10155.4258 -6204.2734 10155.5527 -6204.6538 10155.5527 c-6204.8433 10155.5527 -6205.0752 10155.5313 -6205.2017 10155.5313 c-6205.3281 10155.5117 -6205.8975 10155.2354 -6206.0449 10155.2354 c-6206.2134 10155.2354 -6206.3193 10155.3633 -6206.3193 10155.5313 c-6206.3193 10155.7227 -6206.2559 10155.8486 -6206.0654 10155.9961 c-6205.3921 10156.6074 -6205.3486 10156.6279 -6205.3486 10157.1133 c-6205.3486 10157.3877 -6206.0449 10158.5898 -6206.0449 10158.8848 c-6206.0449 10159.2002 -6205.5806 10159.4326 -6205.3066 10159.4326 c-6204.4424 10159.4326 -6204.21 10157.957 -6204.21 10157.6406 c-6204.21 10157.4082 -6204.5054 10156.3135 y-6204.5054 10156.1221 -6204.4424 10156.1221 -6203.9995 10156.1221 c-6203.6626 10156.1221 -6203.5986 10159.0527 -6203.5986 10159.2637 c-6203.5986 10159.4326 -6203.6826 10159.5586 -6203.8511 10159.666 c-6204.1265 10159.8555 -6205.4336 10161.1826 -6205.4121 10162.5957 c-6205.4121 10165.085 -6203.6406 10166.0322 -6202.9458 10166.1172 c-6202.5874 10166.1602 -6201.7007 10166.1377 -6201.4058 10166.3076 c-6200.9424 10166.5391 -6199.8042 10167.6992 -6199.8042 10168.6904 c-6199.8042 10169.8916 -6200.5215 10170.25 -6200.8774 10170.25 c-6201.2378 10170.25 -6201.5103 10170.2295 -6201.5103 10169.7441 c-6201.5103 10169.5332 -6201.3423 10169.3008 -6201.1318 10169.2383 c-6201.0474 10169.2168 -6200.2881 10169.0273 -6200.2881 10168.7109 c-6200.2881 10168.5625 -6200.3721 10168.5625 -6200.5835 10168.5625 c-6201.1318 10168.5625 -6201.8066 10168.3535 -6203.0928 10167.1504 c-6203.4722 10166.8135 -6204.1265 10166.7295 -6204.5679 10166.7295 c-6205.0537 10166.7295 -6206.2974 10167.1924 -6206.2974 10168.6904 c-6206.2974 10170.5234 -6205.4751 10171.2207 -6204.8433 10171.2207 c-6204.4209 10171.2207 -6203.8936 10170.9033 -6203.8936 10170.6289 c-6203.8936 10170.293 -6203.9575 10169.8711 -6204.5479 10169.8281 c-6205.0537 10169.7861 -6205.3066 10169.5537 -6205.3066 10169.2168 c-6205.3066 10169.0059 -6205.1592 10168.7949 -6204.8218 10168.7949 c-6204.3154 10168.7949 -6203.7041 10169.3652 -6203.0713 10170.1025 c-6202.6714 10170.5879 -6201.7007 10171.1152 -6200.9209 10171.1152 c-6200.1191 10171.1152 -6199.0654 10170.209 -6199.0654 10168.8369 c-6199.0654 10167.5723 -6200.4995 10166.2637 -6201.2378 10165.7383 c-6201.9546 10165.2109 -6202.3335 10164.8311 -6202.46 10164.6201 c-6202.5654 10164.4727 -6202.9033 10163.5234 -6203.1143 10163.5234 c-6203.2607 10163.5234 -6203.3672 10163.6914 -6203.3672 10163.9033 c-6203.3672 10164.2197 -6203.1143 10164.8535 -6202.7759 10165.1895 c-6202.6929 10165.2949 -6202.6494 10165.3584 -6202.6494 10165.4209 c-6202.6494 10165.5693 -6202.8398 10165.5898 -6202.9873 10165.5898 c-6203.5767 10165.5898 -6204.7793 10164.6201 -6204.7793 10162.7861 c-6204.7793 10161.2041 -6203.7881 10160.3613 -6203.6406 10160.3613 c-6203.5361 10160.3613 -6203.4297 10160.4658 -6203.3672 10160.6777 c-6201.6592 10166.834 -6196.7822 10168.0576 -6194.3774 10168.0576 c-6194.2729 10168.0576 -6194.1895 10168.1201 -6194.1895 10168.2695 c-6194.1895 10168.3945 -6194.1895 10169.4922 -6194.3359 10169.4922 c-6194.3774 10169.4922 -6194.4414 10169.4697 -6194.5264 10169.4072 c-6195.0942 10168.9434 -6195.3755 10168.585 -6196.3022 10168.585 c-6196.7666 10168.585 -6197.5679 10169.1113 -6197.5679 10169.7236 c-6197.5679 10170.5029 -6196.8936 10171.2207 -6196.4082 10171.2207 c-6196.0498 10171.2207 -6195.9023 10171.1357 -6195.9023 10171.0098 c-6195.9023 10170.8818 -6196.3662 10170.4404 -6196.3662 10170.293 c-6196.3662 10170.0391 -6196.3242 10169.8916 -6195.8809 10169.8916 c-6195.4814 10169.8916 -6194.7842 10170.0615 -6194.3418 10170.3145 c-6193.8774 10170.5879 -6192.7393 10171.2207 -6191.7065 10171.2207 c-6190.9473 10171.2207 -6189.9561 10170.7773 -6189.4702 10169.9766 c-6189.4287 10169.9121 -6189.3862 10169.8916 -6189.3447 10169.8916 c-6189.2393 10169.8916 -6189.1543 10169.9766 -6189.1338 10170.125 c-6189.0913 10170.5234 -6188.7534 10171.2207 -6187.9312 10171.2207 c-6187.3408 10171.2207 -6186.8135 10170.7139 -6186.8135 10170.2705 c-6186.8135 10170.1025 -6186.9194 10170.0391 -6187.0239 10170.0391 c-6187.1094 10170.0391 -6187.4878 10170.293 -6187.5942 10170.293 c-6187.7407 10170.293 -6188.6479 10169.6807 -6188.7334 10169.5332 c-6189.5127 10168.2471 -6189.5977 10168.0996 -6190.2295 10167.8457 c-6190.3984 10167.7617 -6190.3984 10167.6777 -6190.3984 10166.8135 c-6190.3984 10166.6865 -6190.3984 10166.3906 -6190.5454 10166.2227 c-6190.8198 10165.9492 -6192.9287 10163.8818 -6193.1392 10163.8818 c-6193.2241 10163.8818 -6193.4985 10164.1563 -6193.5835 10164.1563 c-6193.6035 10164.1563 -6193.6255 10164.1563 -6193.6255 10164.1143 C-6193.6035 10163.9668 l-6193.6035 10163.7988 -6193.6455 10163.7129 -6193.8564 10163.7129 c-6193.9199 10163.7129 -6194.1943 10163.8398 -6194.2568 10163.8398 c-6194.3198 10163.8398 -6194.3623 10163.3975 -6194.4473 10163.3975 c-6194.4678 10163.3975 -6194.8057 10163.6289 -6194.8896 10163.6289 c-6195.0166 10163.6289 -6195.1006 10163.5449 -6195.1006 10163.4395 c-6195.1006 10163.377 -6195.1006 10162.8916 -6195.2065 10162.8916 c-6195.2915 10162.8916 -6195.5225 10163.1855 -6195.5654 10163.1855 c-6195.5854 10163.1855 -6195.5854 10163.166 -6195.5854 10163.1016 C-6195.5439 10162.6807 l-6195.5439 10162.6162 -6195.5854 10162.5957 -6195.6494 10162.5957 c-6195.7119 10162.5957 -6195.9658 10162.9121 -6196.0498 10162.9121 c-6196.0918 10162.9121 -6196.1138 10162.8701 -6196.1138 10162.7861 c-6196.1138 10162.7441 -6195.9233 10162.0273 -6195.9233 10161.8789 c-6195.9233 10161.7949 -6195.9658 10161.752 -6196.0078 10161.752 c-6196.0918 10161.752 -6196.4297 10162.1113 -6196.4722 10162.1113 c-6196.4927 10162.1113 -6196.4927 10162.1113 -6196.4927 10162.0898 c-6196.4927 10162.0059 -6196.3882 10161.6465 -6196.3882 10161.627 c-6196.3882 10161.6055 -6196.4082 10161.584 -6196.4297 10161.584 c-6196.4722 10161.584 -6196.6826 10161.7949 -6196.7446 10161.7949 c-6196.7666 10161.7949 -6196.7666 10161.7949 -6196.7666 10161.752 c-6196.7666 10161.584 -6196.5137 10160.8457 -6196.5137 10160.7822 c-6196.5137 10160.7607 -6196.5352 10160.7402 -6196.5562 10160.7402 c-6196.6826 10160.7402 -6197.1055 10161.3105 -6197.1465 10161.3105 c-6197.1675 10161.3105 -6197.1675 10161.2891 -6197.1675 10161.2256 c-6197.1675 10161.0352 -6196.8936 10160.1289 y-6196.8936 10160.1074 -6196.9146 10160.0869 -6196.9351 10160.0869 c-6197.0615 10160.0869 -6197.4414 10160.6338 -6197.5049 10160.6338 c-6197.5264 10160.6338 -6197.5264 10160.6338 -6197.5264 10160.5928 c-6197.2729 10159.6855 -6197.2729 10159.6016 v-6197.2729 10159.4961 -6197.3154 10159.4541 -6197.3994 10159.4541 c-6197.4634 10159.4541 -6197.6943 10159.791 -6197.7783 10159.791 c-6197.8218 10159.791 -6197.8418 10159.75 -6197.8418 10159.6855 c-6197.7783 10159.1377 Lf1 D-6202.0386 10158.4004 m-6202.1016 10158.4414 -6202.1865 10158.4629 -6202.2495 10158.4629 c-6202.5874 10158.4629 -6202.6714 10156.46 -6202.6714 10156.2695 c-6202.6714 10156.207 -6202.6289 10156.166 -6202.5654 10156.166 c-6201.4272 10156.166 -6199.5498 10158.127 -6199.5498 10158.5469 c-6199.5498 10158.5898 -6199.5498 10158.6104 -6199.5928 10158.6104 c-6199.6138 10158.6104 -6199.6553 10158.5898 -6199.6982 10158.5684 c-6200.0986 10158.2949 -6200.5215 10158.1895 -6201.1104 10158.1895 c-6201.4902 10158.1895 -6201.7007 10158.252 -6202.0386 10158.4004 cf-6200.3306 10162.3633 m-6199.8882 10163.1855 -6198.8115 10163.1855 -6198.7271 10163.1855 c-6198.5801 10163.1855 -6198.3906 10163.166 -6198.3906 10162.9961 c-6198.3906 10162.8066 -6199.4238 10162.5537 -6199.4238 10162.3633 c-6199.2129 10162.0273 -6199.2129 10161.9424 v-6199.2129 10161.543 -6199.2129 10161.5 -6199.0225 10161.5 c-6198.7915 10161.5 -6197.9897 10161.7949 -6197.7378 10162.5117 c-6197.5474 10163.0391 -6196.5767 10164.7666 -6194.4258 10164.7666 c-6193.5615 10164.7666 -6193.2446 10164.6201 -6193.0977 10164.6201 c-6192.7817 10164.6201 -6190.8418 10166.666 -6190.8198 10166.834 c-6190.7998 10166.9395 -6190.7998 10167.0664 -6190.7998 10167.1719 c-6190.7998 10167.3828 -6190.7998 10167.7832 -6191.1782 10168.0361 c-6191.3896 10168.1631 -6191.4951 10168.416 -6191.4951 10168.668 c-6191.4951 10168.7744 -6191.4951 10169.1328 -6191.2207 10169.1328 c-6190.9473 10169.1328 -6190.9058 10168.9854 -6190.9058 10168.6904 c-6190.9058 10168.502 -6190.7358 10168.3945 -6190.5889 10168.3945 c-6190.4399 10168.3945 -6189.8506 10168.6904 -6189.8506 10169.1113 c-6189.8506 10169.3438 -6190.1455 10170.4189 -6191.4321 10170.4189 c-6192.4014 10170.4189 -6192.4014 10170.293 -6192.4014 10168.8994 c-6192.4014 10167.6357 -6192.3594 10167.2344 -6192.2119 10166.0967 c-6192.1904 10166.0967 -6192.1904 10166.0752 y-6192.1904 10165.9277 -6192.3174 10165.8643 -6192.4233 10165.8643 c-6192.4438 10165.8643 -6192.4648 10165.8848 -6192.4863 10165.8848 c-6192.6118 10165.9063 -6192.9072 10166.2227 -6193.8145 10166.2002 c-6195.7119 10166.2002 -6199.9087 10164.6416 -6201.2793 10162.1533 c-6201.8906 10161.0781 -6202.2705 10159.707 -6202.2705 10159.4541 c-6202.2705 10158.9053 -6201.2578 10158.7373 -6201.0049 10158.7373 c-6199.6553 10158.7373 -6198.2847 10160.4023 -6198.2847 10160.8457 c-6198.2847 10160.8877 -6198.3271 10160.9297 -6198.3486 10160.9297 c-6198.3906 10160.9297 -6198.4326 10160.9092 -6198.4961 10160.8672 c-6198.6431 10160.7197 -6199.2334 10160.0654 -6199.8662 10160.0654 c-6200.5625 10160.0654 -6200.5835 10160.5293 -6200.5835 10160.9512 c-6200.5835 10161.3945 -6200.5415 10161.9629 -6200.3306 10162.3633 cf0 D-6196.5352 10159.0527 m-6196.5352 10159.2002 -6196.5352 10159.5176 -6196.2192 10159.5176 c-6196.1553 10159.5176 -6196.0918 10159.4961 -6196.0278 10159.4121 c-6195.9863 10159.3262 -6195.8608 10158.8848 -6195.7754 10158.8848 c-6195.7334 10158.8848 -6195.7119 10158.9053 -6195.7119 10158.9688 c-6195.7119 10159.2002 -6195.8174 10159.5801 -6195.8174 10159.8135 c-6195.8174 10159.96 -6195.6694 10160.1289 -6195.5225 10160.1289 c-6195.3115 10160.1289 -6195.1855 10159.707 -6195.1226 10159.4961 c-6195.1006 10159.4326 -6195.0586 10159.4121 -6195.0386 10159.4121 c-6195.0166 10159.4326 -6195.0166 10159.4541 V-6195.0386 10159.9814 l-6195.0386 10160.2129 -6195.0386 10160.4023 -6194.8271 10160.4023 c-6194.6782 10160.4023 -6194.4897 10159.6016 -6194.3418 10159.6016 c-6194.3198 10159.6016 -6194.2998 10159.623 -6194.2998 10159.6855 c-6194.2998 10159.75 -6194.3623 10160.0869 -6194.3623 10160.1709 c-6194.3623 10160.3613 -6194.3418 10160.7822 -6194.1104 10160.7822 c-6194.0254 10160.7822 -6193.8774 10160.2969 -6193.7935 10160.2969 c-6193.7729 10160.2969 -6193.7729 10160.3184 -6193.7729 10160.3613 c-6193.7729 10160.4453 -6193.8994 10160.8037 -6193.8994 10160.8877 c-6193.8994 10160.9922 -6193.7935 10161.0996 -6193.7095 10161.0996 c-6193.5835 10161.0996 -6193.3506 10160.4863 -6193.3086 10160.4863 c-6193.2666 10160.4863 -6193.2446 10160.5508 -6193.2446 10160.6143 c-6193.2446 10160.7197 -6193.3926 10161.1406 -6193.3926 10161.2256 c-6193.3926 10161.373 -6193.3286 10161.457 -6193.2666 10161.457 c-6193.1826 10161.457 -6193.0342 10161.0566 -6192.9502 10161.0566 c-6192.9072 10161.0566 -6192.8862 10161.1621 -6192.8862 10161.2256 c-6193.0762 10161.9424 -6193.0762 10162.0898 v-6193.0762 10162.2168 -6193.0342 10162.2578 -6192.9922 10162.2578 c-6192.9072 10162.2578 -6192.7178 10161.7949 -6192.6338 10161.7949 c-6192.5918 10161.7949 -6192.5703 10161.8584 -6192.5703 10161.9424 c-6192.5703 10162.0898 -6192.7817 10162.6602 -6192.7817 10162.7637 c-6192.7817 10162.9121 -6192.7817 10163.1016 -6192.6758 10163.1016 c-6192.6338 10163.1016 -6192.4863 10162.8916 -6192.4438 10162.8916 c-6192.4014 10162.8916 -6192.3809 10162.9336 -6192.3809 10162.9961 c-6192.3809 10163.0596 -6192.5073 10163.3555 -6192.5073 10163.418 c-6192.5073 10163.5449 -6189.9561 10166.2637 -6189.4287 10166.2637 c-6188.9233 10166.2637 -6188.8594 10166.2637 -6188.7744 10166.4551 c-6188.6904 10166.6865 -6188.5854 10166.9189 -6188.1426 10167.1924 c-6187.0039 10167.8242 -6186.8774 10167.9102 -6186.8135 10168.2266 c-6186.7295 10168.7109 -6186.7085 10168.7529 -6186.3926 10168.9639 c-6186.2446 10169.0693 -6186.2026 10169.1748 -6186.2026 10169.3223 c-6186.2026 10169.6807 -6186.2026 10169.7236 -6186.0127 10169.7236 c-6185.7598 10169.7236 -6185.4214 10169.0488 -6185.4214 10168.6904 c-6185.4214 10167.7412 -6185.8018 10167.6357 -6186.4126 10167.4658 c-6186.5615 10167.4248 -6186.7085 10167.3184 -6186.7085 10167.2344 c-6186.7085 10167.1924 -6186.6875 10167.1719 -6186.6455 10167.1504 c-6185.7598 10166.6455 -6185.4214 10165.9492 -6185.4214 10165.3789 c-6185.4214 10164.5781 -6186.7085 10160.8672 -6186.7085 10160.5293 c-6186.7085 10160.0439 -6186.5615 10160.002 -6186.3711 10160.002 c-6186.2241 10160.002 -6185.7178 10160.5293 -6185.5903 10160.5293 c-6185.5073 10160.5293 -6185.4214 10160.4658 -6185.4214 10160.2969 c-6185.4214 10160.0654 -6185.8657 10159.0322 -6186.8984 10159.0322 c-6187.4878 10159.0322 -6187.8682 10159.5586 -6187.8682 10160.0215 c-6187.8682 10160.9727 -6187.5518 10161.1465 -6187.1934 10161.7168 c-6187.1294 10161.8438 -6187.0879 10161.9697 -6187.0879 10162.0762 c-6187.0879 10162.3496 -6187.7202 10162.2705 -6188.0786 10162.2705 c-6188.2256 10162.2705 -6188.3955 10162.2441 -6188.3955 10162.1377 c-6188.3955 10157.5215 -6191.6426 10153.9717 -6195.5225 10153.2334 c-6195.8394 10153.1689 -6195.9863 10153.0439 -6195.9863 10152.918 c-6195.9863 10152.875 -6195.1006 10151.7578 -6193.6255 10151.7578 c-6191.8535 10151.7578 -6190.7153 10153.2334 -6190.7153 10153.9922 c-6190.7153 10154.0762 -6190.7568 10154.1406 -6190.8198 10154.1406 c-6190.9058 10154.1406 -6191.8535 10153.1914 -6192.0854 10153.1914 c-6192.2119 10153.1914 -6192.3174 10153.2969 -6192.3174 10153.4023 c-6192.3174 10153.5293 -6192.2334 10153.6543 -6192.0439 10153.8018 c-6191.9814 10153.8242 -6190.5454 10155.5117 -6190.2515 10155.8486 c-6189.6401 10156.5654 -6188.8594 10157.3447 -6187.6362 10157.3447 c-6186.4561 10157.3447 -6185.4214 10156.1445 -6185.4214 10155.3848 c-6185.4214 10154.6055 -6185.8857 10153.9082 -6186.3711 10153.5078 c-6187.8896 10152.2422 -6187.8896 10151.8633 -6187.8896 10151.6309 c-6187.8896 10151.3145 -6187.6992 10151.1895 -6187.4878 10151.1895 c-6187.1514 10151.1895 -6186.9824 10151.3359 -6186.9824 10152.0098 c-6186.9824 10152.3477 -6186.6455 10152.6855 -6186.2026 10152.6855 c-6185.7598 10152.6855 -6185.4434 10152.3066 -6185.4434 10151.6943 c-6185.4434 10151.084 -6186.2871 10150.3447 -6187.4878 10150.3447 c-6189.1338 10150.3447 -6189.6182 10151.5039 -6189.6182 10151.9893 c-6189.6182 10152.3262 -6189.5127 10152.918 -6189.1958 10153.2754 c-6188.8594 10153.6768 -6188.4595 10154.373 -6188.1846 10155.0898 c-6187.9521 10155.7432 -6187.4258 10156.1016 -6187.0879 10156.1016 c-6187.0239 10156.1016 -6187.0039 10156.0801 -6187.0039 10156.0381 c-6187.0039 10155.9326 -6187.2144 10155.5527 -6187.2144 10155.4688 c-6187.2144 10155.0898 -6187.1094 10154.8789 -6186.8984 10154.8789 c-6186.3711 10154.8789 -6186.2656 10155.5313 -6186.2656 10155.7637 c-6186.2656 10156.25 -6186.6245 10156.8389 -6187.6782 10156.8389 c-6189.0063 10156.8389 -6190.1245 10155.0898 -6190.1245 10155.0264 c-6190.1245 10155.0039 -6190.0825 10154.457 -6190.0825 10154.3506 c-6190.0825 10152.4521 -6191.79 10151.1895 -6193.6255 10151.1895 c-6195.1855 10151.1895 -6196.3447 10152.4121 -6196.5352 10152.7061 c-6196.6401 10152.875 -6196.7666 10152.959 -6196.9146 10152.959 c-6197.2729 10152.959 -6200.1191 10152.8975 -6200.1191 10152.4746 c-6200.1191 10152.4326 -6199.9937 10151.9688 -6199.8242 10151.9688 c-6199.7607 10151.9688 -6199.6982 10152.0098 -6199.6353 10152.0742 c-6199.4438 10152.3066 -6199.0225 10152.4326 -6198.6431 10152.4326 c-6198.0942 10152.4326 -6197.1895 10151.8418 -6197.1895 10151.1045 c-6197.1895 10150.8086 -6197.5679 10150.3242 -6197.8838 10150.3242 c-6198.1377 10150.3242 -6199.1914 10151.041 -6199.4238 10151.041 c-6199.7402 10151.041 -6199.8662 10150.8926 -6200.1606 10150.5557 c-6200.3306 10150.3662 -6200.4575 10150.3447 -6200.6465 10150.3447 c-6200.8154 10150.3447 -6200.9634 10150.4502 -6200.9634 10150.5977 c-6200.9634 10150.7656 -6200.6465 10151.084 -6200.6265 10151.3574 c-6200.6265 10151.5039 -6200.6055 10151.7354 -6200.6055 10151.9258 c-6200.6055 10152.1797 -6200.6265 10152.5381 -6200.8994 10152.5381 c-6201.7217 10152.5381 -6203.7681 10151.252 -6204.6538 10150.6602 c-6205.1592 10150.3242 -6205.2432 10150.3242 -6205.3066 10150.3242 c-6205.4336 10150.3242 -6205.5176 10150.4082 -6205.5176 10150.5557 c-6205.5176 10150.6816 -6203.0713 10152.834 -6200.8994 10153.5703 c-6200.5835 10153.6768 -6200.6055 10153.8242 -6200.5625 10153.9922 c-6200.1406 10155.7432 -6198.5166 10157.916 -6197.9263 10157.916 c-6197.7783 10157.916 -6197.7158 10157.916 -6197.7158 10158.0215 c-6197.7158 10158.2305 -6197.6104 10158.4629 -6197.4634 10158.4629 c-6197.4209 10158.4629 -6197.2524 10158.2305 -6197.21 10158.2305 c-6197.1255 10158.2305 -6197.0615 10158.6953 -6197.0415 10158.7783 c-6196.9995 10158.8848 -6196.9146 10158.9688 -6196.8506 10158.9688 c-6196.7666 10158.9688 -6196.5986 10158.6318 -6196.5352 10158.6318 c-6196.5137 10158.6318 -6196.4927 10158.6514 -6196.4927 10158.6953 c-6196.5352 10159.0527 Lf1 D-6197.9058 10154.541 m-6198.0942 10154.9629 -6198.2002 10155.2158 -6198.2002 10155.5957 c-6198.2002 10155.8486 -6197.7783 10157.0928 y-6197.7783 10157.1563 -6197.7998 10157.1768 -6197.8633 10157.1768 c-6198.2847 10157.1768 -6200.0352 10154.9414 -6200.0352 10154.0762 c-6200.0352 10153.9717 -6199.9722 10153.9082 -6199.8662 10153.9082 c-6199.8042 10153.9082 -6197.8633 10154.0977 -6197.8633 10154.3301 c-6197.8633 10154.3936 -6197.8838 10154.457 -6197.9058 10154.541 cf-6189.8081 10165.5059 m-6190.7568 10164.6201 -6191.6846 10163.7559 -6191.6846 10163.207 c-6191.6846 10162.8701 -6191.6226 10162.4688 -6191.6226 10162.0479 c-6191.6226 10160.5928 -6192.9722 10159.2637 -6193.8774 10158.8008 c-6194.3623 10158.5469 -6194.8481 10157.9785 -6194.8481 10157.6191 c-6194.8481 10157.5137 -6194.8057 10157.4512 -6194.7422 10157.4512 c-6194.6582 10157.4512 -6194.5942 10157.4717 -6194.5103 10157.4717 c-6194.4473 10157.4717 -6194.2158 10157.3447 -6194.1519 10157.3447 c-6194.0049 10157.3447 -6193.6035 10158 -6193.4561 10158 c-6193.2446 10158 -6193.1826 10157.7891 -6193.1826 10157.6406 c-6193.1826 10157.2822 -6193.7305 10155.9326 -6194.9951 10155.9326 c-6195.7554 10155.9326 -6196.0498 10156.375 -6196.0498 10156.7129 c-6196.0498 10157.3447 -6195.5225 10157.957 -6195.3975 10158.127 c-6195.3545 10158.168 -6195.3335 10158.21 -6195.3335 10158.252 c-6195.3335 10158.2949 -6195.3545 10158.3145 -6195.4175 10158.3145 c-6195.6694 10158.3145 -6197.6519 10157.2822 -6197.6519 10155.5527 c-6197.6519 10155.1318 -6197.4209 10154.3301 -6196.7666 10154.3301 c-6194.2998 10154.3301 -6190.1675 10158.1895 -6190.1675 10162.6377 c-6190.1675 10163.0176 -6190.3984 10163.5664 -6190.4614 10163.9453 c-6190.4834 10163.9668 -6190.4834 10164.0088 -6190.4834 10164.0498 c-6190.4834 10164.1768 -6190.4399 10164.3457 -6190.3145 10164.3457 c-6190.0615 10164.3457 -6188.3955 10164.1563 -6188.0366 10164.1563 c-6186.3926 10164.1563 -6185.9702 10164.1563 -6185.9702 10165.252 c-6185.9702 10166.4756 -6187.1094 10166.793 -6187.5098 10166.793 c-6187.8896 10166.793 -6188.2695 10166.4961 -6188.2695 10166.1377 c-6188.2695 10166.0322 -6188.0791 10165.5898 -6188.0791 10165.5059 c-6188.0791 10165.3584 -6188.2065 10165.2744 -6188.3325 10165.2744 c-6188.4795 10165.2744 -6188.9858 10165.7793 -6189.1338 10165.7793 c-6189.3862 10165.7793 -6189.6401 10165.6533 -6189.8081 10165.5059 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Ovalado/ Adobe Calligrap) -(hic Brush Tool/ 5 pt. Ovalado/ Adobe Calligraphic Brush Tool/ ) -(Plano 5 pt./ Adobe Calligraphic Brush Tool/ Redondo 3 pt./ Ado) -(be Calligraphic Brush Tool/ Redondo 7 pt./ Adobe Calligraphic ) -(Brush Tool/ Redondo 15 pt./ Adobe ArtOnPath Brush Tool/ Carbon) -(cillo/ Adobe ArtOnPath Brush Tool/ Trazo ahusado/ Adobe ArtOnP) -(ath Brush Tool/ Radio floral/ Adobe PatternOnPath Brush Tool/ ) -(Pincel de flecha roja / Adobe PatternOnPath Brush Tool/ G\227tico) -(/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Ovalado)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Ovalado)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Plano 5 pt.)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 15 pt.)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 3 pt.)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 7 pt.)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Carboncillo)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Radio floral)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Trazo ahusado)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(G\627tico)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Pincel de flecha roja )(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registro]) 0 Xs([Registro])Pc0 0 0 0 k(Blanco)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 1 1 0 k(Rojo CMYK)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0 0 0.07 k(K=7)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Capa 1) Ln0 A1 Ap0 D0 O0 J 0 j 1 w 4 M []0 d0 XR3175.123 0 m0 0 L0 3968.5 L3175.123 3968.5 L3175.123 0 LBb0 0 0 0 Bh1 (Unnamed gradient 12) 1869.5054 1984.25 0 1927.7316 0.849188 0 0 1 936.0898 0 Bg1637.0066 0 0 -1927.7316 1587.5615 1984.25 Bmf0 BB*u0 Ap1 D0 0 0 1 k696.1021 2861.7983 m694.5684 2861.9067 659.1641 2861.8867 657.0371 2861.8169 c656.4688 2861.7974 655.9092 2861.7783 655.3613 2861.7612 C655.2881 2870.3081 656.7729 2913.6816 655.6855 2928.064 c650.4648 2997.1606 590.1875 3055.2271 518.457 3060.2563 c513.9624 3060.5713 509.4629 3060.7319 505.0859 3060.7319 c466.0059 3060.7319 431.6563 3048.1685 402.9888 3023.3901 c374.542 2998.8022 356.0762 2962.8091 353.5913 2927.106 c352.7026 2914.3394 353.9067 2870.7026 353.8589 2861.8345 C314.1865 2861.8345 L306.6006 2861.8345 300.4497 2855.9111 300.4497 2848.603 C300.4497 2535.4727 L300.4497 2528.1655 306.6006 2522.2412 314.1865 2522.2412 C695.0962 2522.2412 L702.6826 2522.2412 708.834 2528.1655 708.834 2535.4727 C708.834 2848.603 L708.834 2855.5356 703.2788 2861.2915 696.1021 2861.7983 cf0 D591.8438 2862.9077 m591.8389 2862.5522 591.833 2862.1934 591.8262 2861.8345 C417.542 2861.8345 L417.5146 2864.0444 417.4839 2866.2305 417.4521 2868.3896 c416.9326 2905.0591 416.522 2934.0229 429.5542 2955.77 c445.2803 2982.0151 471.4771 2997.6089 501.4282 2998.5518 c502.4932 2998.5854 503.5449 2998.603 504.5933 2998.603 c534.9717 2998.603 561.7559 2983.8511 578.0747 2958.1304 c593.0552 2934.519 592.5479 2904.481 591.8438 2862.9077 cf*U1243.3472 2861.7988 m1211.2617 2861.8027 L1216.8501 2869.5811 1221.8555 2876.7705 1224.4956 2881.1602 c1260.5566 2941.1035 1244.6636 3021.7808 1188.3154 3064.8311 c1184.7822 3067.5293 1181.1587 3070.1011 1177.5405 3072.4736 c1145.2393 3093.6636 1109.5054 3101.9053 1071.334 3096.9697 c1033.4556 3092.0723 997.1582 3072.333 974.2437 3044.1689 c966.1504 3034.2236 942.145 2998.2764 936.5259 2990.3608 C989.1597 2955.833 L990.3584 2957.5752 991.5469 2959.3047 992.7178 2961.0127 c1013.7153 2991.6035 1030.2988 3015.7656 1053.7778 3026.6738 c1082.1118 3039.8394 1112.8784 3038.5244 1138.1841 3023.0645 c1139.084 3022.5137 1139.9639 3021.958 1140.8291 3021.3906 c1165.9395 3004.917 1179.4565 2978.2017 1177.9165 2948.0933 c1176.502 2920.4551 1158.5298 2895.9023 1133.6563 2861.9229 c1133.6294 2861.8848 1133.6016 2861.8477 1133.5752 2861.8105 C901.1035 2861.835 L861.4312 2861.835 L853.8457 2861.835 847.6963 2855.9111 847.6963 2848.6025 C847.6963 2535.4727 L847.6963 2528.1655 853.8457 2522.2412 861.4312 2522.2412 C1242.3428 2522.2412 L1249.9292 2522.2412 1256.0781 2528.1655 1256.0781 2535.4727 C1256.0781 2848.6025 L1256.0781 2855.5356 1250.5254 2861.293 1243.3472 2861.7988 Cf0 0 0 0 k1 XR563.0674 2749.2397 m563.0674 2779.7461 537.3945 2804.4761 505.7256 2804.4761 c474.0566 2804.4756 448.3838 2779.7456 448.3838 2749.2388 c448.3838 2730.8843 457.6846 2714.6318 471.9858 2704.5864 C457.1553 2584.1782 L554.2983 2584.1787 L539.4683 2704.5864 L553.7681 2714.6323 563.0674 2730.8853 563.0674 2749.2397 cf1109.229 2749.2397 m1109.229 2779.7461 1083.5562 2804.4761 1051.8872 2804.4761 c1020.2183 2804.4756 994.5454 2779.7456 994.5454 2749.2388 c994.5454 2730.8843 1003.8462 2714.6318 1018.1475 2704.5864 C1003.3169 2584.1782 L1100.46 2584.1787 L1085.6299 2704.5864 L1099.9297 2714.6323 1109.229 2730.8853 1109.229 2749.2397 cf0 0 0 1 k0 XR1211.3691 2078.4043 m1222.2041 2093.0947 1238.3877 2115.0166 1244.166 2124.6201 c1283.3057 2189.6846 1266.0562 2277.2559 1204.8926 2323.9854 c1201.0586 2326.9131 1197.1235 2329.7046 1193.1953 2332.2808 c1158.1362 2355.2813 1119.3496 2364.228 1077.916 2358.8701 c1036.8008 2353.5537 997.4023 2332.1289 972.5303 2301.5596 c963.7461 2290.7622 937.6885 2251.7451 931.5908 2243.1509 C988.7188 2205.6738 L990.021 2207.5649 991.311 2209.4419 992.583 2211.2954 c1015.374 2244.501 1033.375 2270.7271 1058.8604 2282.5684 c1089.6152 2296.8589 1123.0088 2295.4312 1150.4785 2278.6484 c1151.4556 2278.0522 1152.4092 2277.4482 1153.3481 2276.8315 c1180.6035 2258.9512 1195.2769 2229.9541 1193.6055 2197.2715 c1192.3057 2171.8867 1178.1372 2148.8994 1157.4512 2120.0801 C1126.2783 2137.0737 1090.2627 2146.7847 1051.8882 2146.7847 c933.3325 2146.7847 837.2236 2054.2041 837.2236 1939.998 c837.2236 1825.7939 933.3325 1733.2119 1051.8882 1733.2119 c1170.4429 1733.2119 1266.5513 1825.7939 1266.5513 1939.998 c1266.5513 1993.2285 1245.667 2041.7539 1211.3691 2078.4043 Cf*u1 D667.9355 2074.2139 m668.4966 2112.6592 669.5225 2186.2524 668.7637 2198.0308 c663.9287 2273.0869 599.2051 2336.7847 521.4116 2343.0474 c516.5347 2343.4385 511.6533 2343.6606 506.9019 2343.7104 c464.4873 2344.1475 427.0513 2330.896 395.6396 2304.3223 c364.4683 2277.9546 343.9907 2239.0928 340.8652 2200.3691 c339.9849 2189.4619 340.2813 2110.0791 340.3696 2073.0977 C308.9312 2037.1299 289.9771 1990.7002 289.9771 1939.999 c289.9771 1825.7939 386.0864 1733.2119 504.6426 1733.2119 c623.1978 1733.2119 719.3057 1825.7939 719.3057 1939.999 c719.3057 1991.2266 699.9604 2038.0923 667.9355 2074.2139 Cf0 D410.0996 2125.686 m411.2998 2168.71 414.6333 2215.9375 423.6563 2230.6309 c441.0425 2258.9404 469.665 2275.5742 502.1836 2276.2637 c503.3403 2276.2866 504.4829 2276.2944 505.6191 2276.2808 c538.5918 2275.9434 567.4858 2259.6323 584.8887 2231.5322 c594.6367 2215.793 598.0957 2169.6201 599.0254 2125.7627 C570.5381 2139.2188 538.5093 2146.7842 504.6426 2146.7842 c470.7109 2146.7842 438.626 2139.189 410.0996 2125.686 Cf*Uu1051.8882 542.9141 m933.3325 542.9141 837.2236 450.332 837.2236 336.127 c837.2236 221.9209 933.3325 129.3398 1051.8882 129.3398 c1170.4429 129.3398 1266.5513 221.9209 1266.5513 336.127 c1266.5513 450.332 1170.4429 542.9141 1051.8882 542.9141 cf992.583 607.4238 m1015.374 640.6279 1033.375 666.8535 1058.8604 678.6943 c1089.6152 692.9863 1123.0088 691.5566 1150.4785 674.7764 c1151.4556 674.1787 1152.4092 673.5762 1153.3481 672.959 c1180.6035 655.0781 1195.2769 626.0811 1193.6055 593.3994 c1192.6035 573.833 1183.9541 555.6904 1170.5693 535.2041 C1190.896 523.9346 1209.3262 509.8516 1225.3057 493.5215 C1233.0859 504.2246 1240.603 514.8271 1244.166 520.749 c1283.3057 585.8135 1266.0562 673.3828 1204.8926 720.1113 c1201.0586 723.042 1197.1235 725.8301 1193.1953 728.4092 c1158.1362 751.4082 1119.3496 760.3564 1077.916 754.998 c1036.8008 749.6807 997.4023 728.2559 972.5303 697.6865 c963.7461 686.8896 937.6885 647.8711 931.5908 639.2803 C988.7188 601.8018 L990.021 603.6924 991.311 605.5713 992.583 607.4238 cfUu504.6426 542.9131 m386.0864 542.9131 289.9771 450.332 289.9771 336.127 c289.9771 221.9219 386.0864 129.3398 504.6426 129.3398 c623.1978 129.3398 719.3057 221.9219 719.3057 336.127 c719.3057 450.332 623.1978 542.9131 504.6426 542.9131 cf411.0762 547.2754 m412.8232 582.0742 416.3994 614.9414 423.6563 626.7588 c441.0425 655.0703 469.665 671.7031 502.1836 672.3896 c503.3403 672.418 504.4829 672.4219 505.6191 672.4092 c538.5918 672.0684 567.4858 655.7607 584.8887 627.6582 c592.7559 614.958 596.5259 582.4277 598.1763 547.291 C624.3135 536.5342 648.0464 521.4063 668.3896 502.8613 C668.8872 540.6338 669.3398 585.2129 668.7637 594.1592 c663.9287 669.2129 599.2051 732.9131 521.4116 739.1748 c516.5347 739.5674 511.6533 739.79 506.9019 739.8379 c464.4873 740.2764 427.0513 727.0225 395.6396 700.4531 c364.4683 674.0811 343.9907 635.2207 340.8652 596.4971 c340.1992 588.2539 340.2061 540.917 340.2871 502.3164 C360.7554 521.1064 384.6943 536.4131 411.0762 547.2754 CfU*u1 D726.564 1289.1992 m668.1147 1296.1797 L668.6826 1336.2344 669.4468 1396.9238 668.7637 1407.5264 c663.9282 1482.585 599.2051 1546.2813 521.4111 1552.5459 c516.5342 1552.9355 511.6528 1553.1572 506.9014 1553.208 c464.4868 1553.6436 427.0513 1540.3906 395.6392 1513.8203 c364.4673 1487.4512 343.9902 1448.5889 340.8647 1409.8643 c340.0586 1399.8809 340.2393 1332.5137 340.3438 1292.8213 C280.7041 1284.3887 L282.7183 960.375 L506.0142 931.3311 L728.5791 965.1895 L726.564 1289.1992 Lf0 D503.2954 1315.8613 m409.5278 1302.6035 L409.9346 1350.9482 412.2461 1421.5488 423.6563 1440.127 c441.042 1468.4385 469.6641 1485.0703 502.1831 1485.7598 c503.3403 1485.7852 504.4819 1485.79 505.6187 1485.7793 c538.5913 1485.4404 567.4854 1469.1279 584.8882 1441.0273 c596.9858 1421.4941 599.3979 1355.0791 599.3076 1304.3965 C503.2954 1315.8613 Lf*U1273.8091 1289.2002 m1226.9731 1294.793 L1227.4707 1295.3086 1227.8936 1295.7539 1228.2334 1296.124 c1279.9082 1352.4902 1280.8989 1441.6182 1230.4863 1499.0361 c1227.3267 1502.6367 1224.0391 1506.1191 1220.7144 1509.3887 c1191.0435 1538.5879 1154.8442 1554.7188 1113.1274 1557.3242 c1071.7295 1559.9102 1028.7241 1546.3818 998.0889 1521.1279 c987.2705 1512.209 898.7256 1425.9004 890.9917 1418.6299 C939.3398 1371.0479 L941.0034 1372.6563 942.6509 1374.2529 944.2778 1375.8281 c973.4102 1404.0586 1051.4395 1479.3594 1078.8457 1486.1309 c1111.9199 1494.3076 1144.3677 1486.5752 1167.8682 1464.9102 c1168.7041 1464.1387 1169.5166 1463.3652 1170.3125 1462.584 c1193.3784 1439.8828 1201.8354 1408.667 1193.5156 1376.9453 c1189.4785 1361.5537 1165.3452 1333.2324 1138.4634 1305.3623 C1050.541 1315.8623 L827.9492 1284.3887 L829.9648 960.376 L1053.2598 931.3311 L1275.8252 965.1895 L1273.8091 1289.2002 Lfu1910.144 2254.0708 m1910.8125 2254.0728 L1930.1001 2254.0728 1986.165 2254.062 1999.4336 2153.3125 C2085.2129 2153.3125 L2079.6855 2200.8062 2066.2266 2240.0376 2045.0967 2270.1333 c2016.5986 2310.7236 1975.6196 2333.02 1923.2949 2336.4004 c1919.1211 2336.6694 1914.8618 2336.8071 1910.6387 2336.8071 c1886.7749 2336.8071 1862.7476 2332.5059 1842.9785 2324.6982 c1782.0986 2300.6538 1744.623 2241.6011 1733.8711 2153.3125 C1821.5713 2153.3125 L1833.6167 2253.6553 1890.5605 2253.9658 1910.144 2254.0708 Cf2122.7568 2087.1895 m2122.9043 2090.186 2122.2461 2093.165 2120.8447 2095.8423 c2119.4287 2098.5542 2117.584 2100.561 2115.8418 2102.0249 C2114.6641 2104.2036 2112.9756 2104.2222 2110.7363 2105.9497 C2110.7363 2110.291 L2110.7363 2119.0874 2103.9189 2126.499 2094.8535 2127.5649 c2093.0439 2127.7769 1985.4697 2127.6919 Y1980.0059 2127.6919 1974.833 2125.3101 1971.4038 2121.2114 c1967.9741 2117.1118 1966.6543 2111.7368 1967.8174 2106.5923 c1968.9917 2101.3804 1969.7461 2094.3916 1966.6597 2090.7031 c1958.7837 2081.2905 1926.8486 2081.2905 1913.2158 2081.2905 c1900.6577 2081.2905 1867.3003 2081.2905 1860.0547 2090.2485 c1857.0947 2093.9106 1858.5513 2101.709 1859.6836 2106.0356 c1861.0444 2111.2354 1859.8384 2116.7524 1856.4165 2120.9868 c1852.9927 2125.2178 1847.7354 2127.6919 1842.1641 2127.6919 C1726.5571 2127.6919 L1716.5811 2127.6919 1708.4917 2119.8999 1708.4917 2110.291 C1708.4917 2104.3784 L1707.7236 2103.6299 1707.0132 2102.8179 1706.3672 2101.9409 C1703.5176 2100.4868 1701.5176 2098.5625 1700.165 2096.8262 c1698.2847 2094.4253 1695.5098 2089.5806 1696.5308 2082.77 C1698.3945 2047.6001 1693.5342 1898.9766 1696.5024 1861.8613 c1700.4912 1811.9844 1722.9727 1765.6875 1763.167 1746.6543 c1788.7339 1734.5508 1998.7461 1732.6836 2007.3291 1733.3203 c2039.3379 1735.6973 2063.4932 1749.3809 2084.0117 1769.9277 c2105.8164 1791.7637 2120.293 1825.7617 2122.7363 1860.875 c2125.2559 1897.0566 2121.0967 2053.2749 2122.7568 2087.1895 cfU*u1 D2044.6357 3652.8843 m2012.7031 3652.8843 L2013.0479 3677.8618 2013.4414 3711.6108 2013.0381 3717.8462 c2009.9951 3765.105 1969.2417 3805.2114 1920.2593 3809.1538 c1917.1904 3809.4009 1914.1152 3809.54 1911.1245 3809.5718 c1884.418 3809.8467 1860.8486 3801.5034 1841.0684 3784.7729 c1821.4434 3768.1689 1808.5493 3743.6987 1806.5806 3719.3188 c1806.1201 3713.6079 1806.1719 3678.0806 1806.2334 3652.8843 C1774.4521 3652.8843 L1740.7539 3652.8843 1713.436 3626.5698 1713.436 3594.1099 C1713.436 3333.8413 L1713.436 3301.3794 1740.7539 3275.0649 1774.4521 3275.0649 C2044.6357 3275.0649 L2078.333 3275.0649 2105.6504 3301.3794 2105.6504 3333.8413 C2105.6504 3594.1099 L2105.6504 3626.5698 2078.333 3652.8843 2044.6357 3652.8843 Cf0 D1858.71 3738.3726 m1869.6567 3756.1968 1887.6782 3766.6704 1908.1533 3767.104 c1908.8818 3767.1206 1909.6011 3767.124 1910.3174 3767.1157 c1931.0796 3766.9019 1949.2705 3756.6323 1960.2285 3738.939 c1967.8486 3726.6343 1969.3643 3684.8008 1969.3076 3652.8843 C1849.8252 3652.8843 L1850.1064 3683.2827 1851.6123 3726.8145 1858.71 3738.3726 cf*U*u1 D2056.7891 2898.8906 m2057.1396 2928.4092 2057.3633 2958.1064 2056.9238 2964.8989 c2052.584 3032.2734 1994.4873 3089.4512 1924.6548 3095.0718 c1920.2788 3095.4248 1915.8955 3095.6245 1911.6289 3095.6675 c1873.5552 3096.0605 1839.9526 3084.1646 1811.7544 3060.3115 c1783.7749 3036.6426 1765.394 3001.7578 1762.5864 2966.9976 c1762.0815 2960.7373 1762.0088 2929.3447 1762.043 2898.8408 C1734.2949 2893.3184 1713.436 2869.6494 1713.436 2841.2842 C1713.436 2581.0161 L1713.436 2548.5557 1740.7539 2522.2412 1774.4521 2522.2412 C2044.6357 2522.2412 L2078.333 2522.2412 2105.6504 2548.5557 2105.6504 2581.0161 C2105.6504 2841.2842 L2105.6504 2869.7363 2084.6631 2893.4624 2056.7891 2898.8906 Cf0 D1907.394 3035.123 m1908.4346 3035.1465 1909.457 3035.1509 1910.4785 3035.1416 c1940.0796 3034.835 1966.0122 3020.1948 1981.6353 2994.9702 c1990.3828 2980.8467 1993.4893 2939.4189 1994.3242 2900.0596 C1824.7378 2900.0596 L1825.8188 2938.6543 1828.813 2980.9844 1836.9053 2994.1616 c1852.5117 3019.5742 1878.2041 3034.5049 1907.394 3035.123 cf*U2665.6113 3652.8838 m2636.5391 3652.8838 L2642.7793 3658.8511 2647.5039 3663.4536 2649.1533 3665.2544 c2681.6914 3700.7441 2682.3125 3756.8599 2650.5693 3793.0122 c2648.5801 3795.2773 2646.5098 3797.4702 2644.417 3799.5308 c2625.7334 3817.9155 2602.9414 3828.0713 2576.6738 3829.7124 c2550.6094 3831.3408 2523.5322 3822.8203 2504.2441 3806.9209 c2497.4316 3801.3052 2441.6816 3746.9629 2436.8105 3742.3857 C2467.2539 3712.4272 L2468.3018 3713.4399 2469.3389 3714.4438 2470.3623 3715.436 c2488.7051 3733.2124 2537.835 3780.6226 2555.0918 3784.8882 c2575.916 3790.0356 2596.3457 3785.1655 2611.1436 3771.5254 c2611.6719 3771.0396 2612.1816 3770.5542 2612.6816 3770.061 c2627.2061 3755.7661 2632.5313 3736.1147 2627.2939 3716.1401 c2623.8516 3703.0132 2597.1895 3674.9458 2574.459 3652.8838 C2395.4277 3652.8838 L2361.7295 3652.8838 2334.4121 3626.5698 2334.4121 3594.1094 C2334.4121 3333.8403 L2334.4121 3301.3799 2361.7295 3275.0649 2395.4277 3275.0649 C2665.6113 3275.0649 L2699.3105 3275.0649 2726.627 3301.3799 2726.627 3333.8403 C2726.627 3594.1094 L2726.627 3626.5698 2699.3105 3652.8838 2665.6113 3652.8838 Cf2689.7393 2892.2915 m2693.4092 2895.8682 2696.1016 2898.5576 2697.416 2899.9932 c2743.8027 2950.5918 2744.6934 3030.5967 2699.4404 3082.1377 c2696.6035 3085.3662 2693.6543 3088.4941 2690.666 3091.4302 c2664.0342 3117.6426 2631.54 3132.1201 2594.0928 3134.4609 c2556.9336 3136.7813 2518.3291 3124.6353 2490.8281 3101.9683 c2481.1182 3093.9609 2401.6367 3016.4863 2394.6943 3009.96 C2438.0908 2967.2495 L2439.5869 2968.6909 2441.0645 2970.124 2442.5244 2971.54 c2468.6768 2996.8818 2538.7207 3064.4731 2563.3223 3070.5537 c2593.0088 3077.8926 2622.1367 3070.9502 2643.2305 3051.5029 c2643.9824 3050.8115 2644.7119 3050.1196 2645.4248 3049.415 c2666.1289 3029.0366 2673.7207 3001.0181 2666.2529 2972.54 c2662.2314 2957.2065 2635.9814 2927.5693 2608.8037 2900.0596 C2389.2529 2900.0596 L2355.5557 2900.0596 2328.2373 2873.7461 2328.2373 2841.2842 C2328.2373 2581.0161 L2328.2373 2548.5557 2355.5557 2522.2412 2389.2529 2522.2412 C2659.4365 2522.2412 L2693.1367 2522.2412 2720.4521 2548.5557 2720.4521 2581.0161 C2720.4521 2841.2842 L2720.4521 2863.1177 2708.083 2882.1567 2689.7393 2892.2915 Cfu2131.4658 1289.2012 m1908.1973 1315.8633 L1685.6045 1284.3906 L1687.6206 960.377 L1910.9165 931.3311 L2133.4805 965.1895 L2131.4658 1289.2012 Lf1814.8384 1328.9072 m1815.8887 1373.5117 1819.0938 1424.7168 1828.5586 1440.1279 c1845.9434 1468.4385 1874.5649 1485.0703 1907.085 1485.7617 c1908.2417 1485.7861 1909.3838 1485.79 1910.5205 1485.7803 c1943.4951 1485.4404 1972.3853 1469.1289 1989.79 1441.0293 c1999.8857 1424.7305 2003.2344 1375.7949 2004.0156 1330.5869 C2073.3701 1322.3037 L2073.834 1358.6426 2074.21 1399.0586 2073.665 1407.5283 c2068.8301 1482.5859 2004.1064 1546.2832 1926.3135 1552.5459 c1921.436 1552.9355 1916.5557 1553.1582 1911.8027 1553.208 c1869.3887 1553.6455 1831.9517 1540.3906 1800.541 1513.8223 c1769.3687 1487.4531 1748.8911 1448.5889 1745.7656 1409.8662 c1745.1191 1401.8633 1745.1079 1356.9961 1745.1821 1319.0576 C1814.8384 1328.9072 LfUu2752.4395 1289.2002 m2529.1748 1315.8613 L2306.582 1284.3887 L2308.5967 960.376 L2531.8916 931.3311 L2754.459 965.1895 L2752.4395 1289.2002 Lf2422.9102 1375.8271 m2452.043 1404.0576 2530.0713 1479.3574 2557.4785 1486.1309 c2590.5527 1494.3076 2623.001 1486.5742 2646.501 1464.9102 c2647.3379 1464.1387 2648.1494 1463.3652 2648.9434 1462.584 c2672.0098 1439.8828 2680.4688 1408.667 2672.1494 1376.9453 c2669.2588 1365.9268 2656.0664 1348.2822 2638.9434 1328.9199 C2723.9248 1318.7715 L2757.9775 1374.3662 2753.2031 1448.8262 2709.1191 1499.0352 c2705.958 1502.6357 2702.6699 1506.1172 2699.3467 1509.3867 c2669.6768 1538.5879 2633.4775 1554.7188 2591.7607 1557.3242 c2550.3623 1559.9102 2507.3555 1546.3789 2476.7207 1521.1279 c2465.9014 1512.209 2377.3594 1425.8984 2369.625 1418.6299 C2417.9736 1371.0479 L2419.6367 1372.6563 2421.2832 1374.2529 2422.9102 1375.8271 cfU*u1 D702.3408 3617.1274 m697.6704 3620.4526 692.0728 3622.187 686.4019 3622.187 c683.7705 3622.187 681.125 3621.813 678.5479 3621.0522 c668.6777 3618.1372 658.0923 3615.5049 646.9121 3613.1636 C647.3286 3645.312 647.6855 3682.0034 647.1997 3689.5435 c642.999 3754.7368 586.7803 3810.0659 519.208 3815.5044 c514.9717 3815.8452 510.7324 3816.0386 506.6045 3816.0806 c469.7637 3816.4619 437.2456 3804.9507 409.9614 3781.8696 c382.8862 3758.9663 365.0991 3725.2095 362.3833 3691.5737 c361.8252 3684.6631 361.8125 3646.0991 361.876 3613.269 C350.8794 3615.585 340.46 3618.1802 330.7363 3621.0522 c328.1587 3621.813 325.5127 3622.187 322.8809 3622.187 c317.2109 3622.187 311.6118 3620.4517 306.9434 3617.1274 c300.1074 3612.2588 296.0737 3604.5537 296.0737 3596.3647 C296.0737 3300.8857 L296.0737 3286.6255 308.0742 3275.0649 322.8794 3275.0649 C686.4033 3275.0649 L701.208 3275.0649 713.21 3286.6255 713.21 3300.8857 C713.21 3596.3647 L713.21 3604.5537 709.1758 3612.2588 702.3408 3617.1274 cf0 D422.0815 3604.0273 m422.5698 3645.6802 424.8198 3702.4287 434.2964 3717.8608 c449.3989 3742.4507 474.2598 3756.8975 502.5063 3757.4966 c503.5122 3757.5171 504.5034 3757.5229 505.4902 3757.5117 c534.1318 3757.2168 559.2285 3743.0513 574.3457 3718.6436 c584.5342 3702.1895 586.8135 3647.4399 586.8711 3603.9937 C560.8525 3601.2983 533.1382 3599.8916 504.6416 3599.8916 c476.0244 3599.8916 448.1958 3601.3091 422.0815 3604.0273 Cf*U1249.5854 3617.127 m1244.915 3620.4521 1239.3184 3622.1865 1233.6475 3622.1865 c1231.0151 3622.1865 1228.3682 3621.8125 1225.793 3621.0527 c1222.4912 3620.0771 1219.0996 3619.1367 1215.6426 3618.2246 C1216.0107 3618.6074 1216.335 3618.9492 1216.5957 3619.2339 c1261.4814 3668.1953 1262.3433 3745.6143 1218.5537 3795.4883 c1215.8091 3798.6143 1212.9531 3801.6387 1210.0659 3804.4814 c1184.2939 3829.8447 1152.8516 3843.8545 1116.6162 3846.1201 c1080.6582 3848.3672 1043.3013 3836.6133 1016.6924 3814.6782 c1007.2954 3806.9312 930.3848 3731.959 923.666 3725.6455 C965.6611 3684.3149 L967.106 3685.7119 968.5381 3687.0967 969.9497 3688.4658 c995.2554 3712.9902 1063.0322 3778.3945 1086.8374 3784.2793 c1115.5664 3791.3809 1143.7515 3784.6626 1164.1641 3765.8462 c1164.8896 3765.1758 1165.5957 3764.5044 1166.2852 3763.8237 c1186.3213 3744.1064 1193.6685 3716.9932 1186.4404 3689.4365 c1181.689 3671.3262 1144.8994 3632.5947 1113.5405 3602.1582 C1093.6641 3600.6646 1072.9912 3599.8916 1051.8867 3599.8916 c985.9507 3599.8916 924.1895 3607.4058 877.981 3621.0527 c875.4043 3621.8125 872.7573 3622.1865 870.1255 3622.1865 c864.4556 3622.1865 858.856 3620.4512 854.188 3617.127 c847.3525 3612.2588 843.3193 3604.5542 843.3193 3596.3643 C843.3193 3300.8853 L843.3193 3286.625 855.3203 3275.0649 870.1245 3275.0649 C1233.6494 3275.0649 L1248.4536 3275.0649 1260.4546 3286.625 1260.4546 3300.8853 C1260.4546 3596.3643 L1260.4546 3604.5542 1256.4209 3612.2588 1249.5854 3617.127 cfu2743.7334 2087.1895 m2743.8818 2090.1865 2743.2207 2093.165 2741.8203 2095.8418 c2740.4043 2098.5547 2738.5615 2100.5605 2736.8184 2102.0244 C2735.6426 2104.2041 2733.9512 2104.2227 2731.7119 2105.9502 C2731.7119 2110.29 L2731.7119 2119.0879 2724.8945 2126.5 2715.8301 2127.5654 c2714.0195 2127.7764 2606.4463 2127.6934 Y2600.9805 2127.6934 2595.8096 2125.3105 2592.3809 2121.2119 c2588.9512 2117.1123 2587.6309 2111.7363 2588.792 2106.5928 c2589.9688 2101.3799 2590.7227 2094.3926 2587.6357 2090.7031 c2579.7607 2081.29 2547.8281 2081.29 2534.1914 2081.29 c2521.6338 2081.29 2488.2773 2081.29 2481.0313 2090.25 c2478.0703 2093.9111 2479.5273 2101.71 2480.6582 2106.0352 c2482.0195 2111.2363 2480.8164 2116.7529 2477.3926 2120.9873 c2473.9688 2125.2178 2468.7119 2127.6934 2463.1426 2127.6934 C2347.5342 2127.6934 L2337.5576 2127.6934 2329.4668 2119.9004 2329.4668 2110.291 C2329.4668 2104.3779 L2328.6992 2103.6309 2327.9902 2102.8174 2327.3428 2101.9414 C2324.4941 2100.4873 2322.4932 2098.5625 2321.1426 2096.8271 c2319.2598 2094.4268 2316.4883 2089.5811 2317.5088 2082.7695 C2319.3711 2047.6006 2314.5107 1898.9766 2317.4785 1861.8604 c2321.4658 1811.9844 2343.9492 1765.6875 2384.1416 1746.6543 c2409.7109 1734.5508 2619.7227 1732.6846 2628.3066 1733.3203 c2660.3145 1735.6973 2684.4678 1749.3809 2704.9883 1769.9277 c2726.793 1791.7656 2741.2705 1825.7617 2743.7129 1860.874 c2746.2324 1897.0566 2742.0723 2053.2754 2743.7334 2087.1895 cf2583.6699 2256.2314 m2584.2725 2255.9424 L2600.2559 2248.1592 2644.3398 2226.6904 2625.9355 2147.8682 C2711.8438 2147.8682 L2715.1445 2170.4688 2715.2227 2191.7656 2712.0371 2211.6084 c2704.1807 2260.5791 2677.0898 2298.5625 2631.5273 2324.5029 c2627.8896 2326.5723 2624.1211 2328.5566 2620.3232 2330.4063 c2598.8672 2340.8506 2575.3809 2347.499 2554.1895 2349.1318 c2488.9248 2354.1602 2429.3848 2317.4639 2381.0762 2242.7871 C2459.9277 2204.4033 L2514.6777 2289.3525 2566.0137 2264.708 2583.6699 2256.2314 CfU1 Ap3968.5 0 m3115.1348 0 L3115.1348 3968.5 L3968.5 3968.5 L3968.5 0 Lfu*u0 Ap0 0 0 0 k3777.2871 413.2354 m3791.1299 413.2354 L3791.1299 110.7285 L3296.8779 110.7285 L3296.8779 124.5742 L3777.2871 124.5742 L3777.2871 413.2354 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u3285.1123 656.2227 m3285.1123 804.3594 3403.4834 883.9619 3544.0029 883.9619 c3684.5283 883.9619 3802.8984 804.3594 3802.8984 656.2227 c3802.8984 508.084 3684.5283 428.4746 3544.0029 428.4746 c3403.4834 428.4746 3285.1123 508.084 3285.1123 656.2227 cf/BBAccumRotation (1.570796) XT1 D3789.0527 656.2227 m3789.0527 789.1318 3686.6055 868.7344 3544.0029 870.1162 c3401.4063 868.7344 3298.9551 789.1318 3298.9551 656.2227 c3298.9551 523.3145 3401.4063 443.7051 3544.0029 442.3232 c3686.6055 443.7051 3789.0527 523.3145 3789.0527 656.2227 cf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u0 D3597.3047 1363.708 m3717.7529 1347.0928 3802.8984 1270.9492 3802.8984 1146.3467 c3802.8984 1014.8232 3696.293 922.7588 3548.1572 922.7588 c3428.4023 922.7588 3285.1123 987.1348 3285.1123 1155.3428 c3285.1123 1286.1797 3384.0977 1350.5576 3445.0176 1352.6299 c3445.0176 1338.79 L3373.7178 1332.5547 3298.9551 1263.335 3298.9551 1155.3428 c3298.9551 992.6709 3445.707 936.6016 3548.1572 936.6016 c3674.1416 936.6016 3789.0527 1012.7451 3789.0527 1146.3467 c3789.0527 1265.4131 3706.6797 1334.6377 3597.3047 1349.8623 C3597.3047 1363.708 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u3615.9951 1430.8799 m3791.1299 1430.8799 L3791.1299 1417.043 L3296.8779 1417.043 L3296.8779 1430.8799 L3597.3047 1430.8799 L3296.8779 1773.5332 L3296.8779 1794.3037 L3507.3154 1555.4795 L3791.1299 1808.1465 L3791.1299 1789.4541 L3515.625 1544.4063 L3615.9951 1430.8799 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u3296.8779 2020.0068 m3296.8779 2033.8438 L3791.1299 2033.8438 L3791.1299 2020.0068 L3296.8779 2020.0068 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u3597.3047 2529.4805 m3717.7529 2512.8647 3802.8984 2436.7212 3802.8984 2312.1216 c3802.8984 2180.6011 3696.293 2088.5371 3548.1572 2088.5371 c3428.4023 2088.5371 3285.1123 2152.9155 3285.1123 2321.123 c3285.1123 2451.9546 3384.0977 2516.3301 3445.0176 2518.4072 c3445.0176 2504.5645 L3373.7178 2498.3325 3298.9551 2429.1074 3298.9551 2321.123 c3298.9551 2158.4458 3445.707 2102.3735 3548.1572 2102.3735 c3674.1416 2102.3735 3789.0527 2178.5176 3789.0527 2312.1216 c3789.0527 2431.1904 3706.6797 2500.4102 3597.3047 2515.6436 C3597.3047 2529.4805 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u3285.1123 2795.333 m3285.1123 2943.4663 3403.4834 3023.0723 3544.0029 3023.0723 c3684.5283 3023.0723 3802.8984 2943.4663 3802.8984 2795.333 c3802.8984 2647.1938 3684.5283 2567.585 3544.0029 2567.585 c3403.4834 2567.585 3285.1123 2647.1938 3285.1123 2795.333 cf/BBAccumRotation (1.570796) XT1 D3789.0527 2795.333 m3789.0527 2928.2412 3686.6055 3007.8447 3544.0029 3009.2266 c3401.4063 3007.8447 3298.9551 2928.2412 3298.9551 2795.333 c3298.9551 2662.4243 3401.4063 2582.8154 3544.0029 2581.4336 c3686.6055 2582.8154 3789.0527 2662.4243 3789.0527 2795.333 cf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u0 D3296.8779 3081.9434 m3296.8779 3102.7104 L3773.8252 3440.5171 L3773.8252 3441.8989 L3296.8779 3441.8989 L3296.8779 3455.7446 L3791.1299 3455.7446 L3791.1299 3434.9746 L3314.1865 3097.1685 L3314.1865 3095.7861 L3791.1299 3095.7861 L3791.1299 3081.9434 L3296.8779 3081.9434 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XT*u3435.3232 3860.729 m3334.2607 3857.2637 3298.9551 3789.4263 3298.9551 3700.126 c3298.9551 3630.2139 3323.874 3545.0684 3412.4814 3545.0684 c3501.7764 3545.0684 3512.1621 3630.9063 3532.2373 3715.3594 c3555.7744 3807.4233 3566.8496 3884.2627 3669.9902 3884.2627 c3763.4414 3884.2627 3802.8984 3794.2671 3802.8984 3709.8169 c3802.8984 3597.6782 3751.6729 3514.6133 3627.0713 3516.6846 c3627.0713 3530.5361 L3745.4414 3530.5361 3789.0527 3604.5967 3789.0527 3709.8169 c3789.0527 3787.3486 3754.4404 3870.4111 3669.2979 3870.4111 c3569.6172 3870.4111 3561.3105 3773.5059 3542.6211 3697.356 c3523.9277 3617.0576 3509.3926 3531.2227 3412.4814 3531.2227 c3314.1865 3531.2227 3285.1123 3620.5171 3285.1123 3700.126 c3285.1123 3797.04 3324.5664 3869.7246 3435.3232 3874.5654 C3435.3232 3860.729 lf/BBAccumRotation (1.570796) XT*U/BBAccumRotation (1.570796) XTU/BBAccumRotation (1.570796) XT*u0 0 0 1 k1918.5371 129.3398 m1916.7295 129.3398 1914.8916 129.46 1913.0747 129.6973 C1708.0522 156.3643 L1687.7178 159.0088 1672.2915 176.1318 1672.1709 196.1943 C1670.3184 493.7031 L1670.1929 513.7803 1685.4199 531.0869 1705.7388 533.96 C1749.7529 540.1846 L1749.7075 583.4063 1749.8965 604.6963 1750.3643 610.4971 c1753.5811 650.3574 1774.5586 690.2754 1806.4795 717.2764 c1837.9297 743.8818 1875.2769 757.3721 1917.4824 757.3721 c1918.1602 757.3721 1918.8428 757.3691 1919.5225 757.3623 c1924.2998 757.3154 1929.1797 757.0928 1934.0181 756.6992 c2013.4521 750.3086 2079.5664 685.0273 2084.5234 608.084 c2084.7773 604.1416 2085.0313 592.9844 2084.4668 543.4619 C2126.0596 538.4941 L2146.6387 536.0381 2162.2549 518.8926 2162.3848 498.6143 C2164.2324 201.1025 L2164.3594 181.2412 2149.3213 163.96 2129.2539 160.9072 C1924.8926 129.8232 L1922.8091 129.5029 1920.6631 129.3398 1918.5371 129.3398 C1918.5371 129.3398 Lf1 D1917.0859 662.2881 m1916.5195 662.2881 1915.9502 662.2822 1915.377 662.2705 c1891.2603 661.7578 1870.0015 649.3662 1857.0479 628.2725 c1855.7949 626.2324 1849.9312 613.6133 1847.5166 554.0068 C1910.125 562.8594 L1912.0776 563.1348 1914.0684 563.2754 1916.0405 563.2754 c1917.7393 563.2754 1919.437 563.1729 1921.0864 562.9736 C1986.9326 555.1094 L1984.7852 613.2344 1978.2607 626.7861 1976.8604 629.0479 c1963.9346 649.916 1942.4814 662.0313 1918.0034 662.2832 c1917.6909 662.2861 1917.3887 662.2881 1917.0859 662.2881 C1917.0859 662.2881 Lf*U0 D2524.0459 129.3398 m2522.2432 129.3398 2520.4111 129.459 2518.5996 129.6934 C2313.5645 156.3623 L2293.2305 159.0078 2277.8037 176.1299 2277.6777 196.1895 C2275.8301 493.7021 L2275.7061 513.7803 2290.9326 531.0879 2311.248 533.9609 C2515.6357 562.8574 L2517.6104 563.1338 2519.5938 563.2734 2521.5498 563.2734 c2523.2432 563.2734 2524.9365 563.1719 2526.583 562.9736 C2615.5781 552.3457 L2633.0996 572.9629 2636.2373 581.0361 2636.7891 583.1396 c2642.8799 606.3623 2636.7207 629.1826 2619.8906 645.749 c2619.292 646.3379 2618.6865 646.9141 2618.0635 647.4863 c2605.251 659.2988 2589.0146 665.5303 2571.083 665.5303 c2564.6523 665.5303 2558.0703 664.71 2551.5195 663.0898 c2549.459 662.5801 2537.1572 658.2744 2497.2598 623.4434 c2472.415 601.7529 2447.4961 577.6035 2435.5195 565.998 c2434.0195 564.5439 2432.498 563.0693 2430.9609 561.5869 c2427.748 558.4854 2423.5947 556.9355 2419.4453 556.9355 c2415.2412 556.9355 2411.0371 558.5254 2407.8125 561.7002 C2363.4199 605.3896 L2360.2041 608.5547 2358.417 612.8916 2358.4688 617.4014 c2358.5215 621.9121 2360.4092 626.207 2363.6963 629.2959 c2365.5479 631.0371 2373.2598 638.5029 2383.0244 647.957 c2419.499 683.2715 2455.707 718.2422 2462.8379 724.1191 c2491.6055 747.832 2530.5713 761.4307 2569.7451 761.4307 c2573.1836 761.4307 2576.6504 761.3232 2580.0508 761.1113 c2622.4619 758.46 2659.2646 742.0586 2689.4375 712.3633 c2692.7813 709.0732 2696.082 705.5781 2699.2412 701.9785 c2738.3477 657.4404 2748.0088 593.4736 2725.8193 539.1816 C2731.5674 538.4951 L2752.1504 536.0371 2767.7666 518.8906 2767.8926 498.6104 C2769.7432 201.1006 L2769.8682 181.2393 2754.8301 163.959 2734.7627 160.9063 C2530.4023 129.8203 L2528.3047 129.501 2526.166 129.3398 2524.0459 129.3398 C2524.0459 129.3398 Lf0 0 0 0 k1 XR1970.625 1191.5098 m1970.625 1222.0156 1944.9521 1246.7461 1913.2832 1246.7461 c1881.6143 1246.7451 1855.9414 1222.0156 1855.9414 1191.5078 c1855.9414 1173.1543 1865.2422 1156.9014 1879.5435 1146.8555 C1864.7129 1026.4473 L1961.856 1026.4482 L1947.0259 1146.8555 L1961.3257 1156.9023 1970.625 1173.1543 1970.625 1191.5098 cf2591.7871 1191.5098 m2591.7871 1222.0156 2566.1133 1246.7461 2534.4453 1246.7461 c2502.7754 1246.7451 2477.1035 1222.0156 2477.1035 1191.5078 c2477.1035 1173.1543 2486.4043 1156.9014 2500.7051 1146.8555 C2485.875 1026.4473 L2583.0176 1026.4482 L2568.1875 1146.8555 L2582.4863 1156.9023 2591.7871 1173.1543 2591.7871 1191.5098 cf1872.9771 234.0107 m1868.9331 234.0107 1865.084 235.7451 1862.4043 238.7744 c1859.7256 241.8037 1858.4746 245.8359 1858.9688 249.8496 C1870.3291 342.082 L1858.4639 353.293 1851.584 368.833 1851.584 385.1006 c1851.584 418.1572 1879.2622 445.0527 1913.2827 445.0537 c1947.3047 445.0537 1974.9824 418.1602 1974.9824 385.1016 c1974.9824 368.835 1968.1035 353.2949 1956.2402 342.083 C1967.5996 249.8506 L1968.0938 245.8369 1966.8428 241.8037 1964.1641 238.7754 c1961.4854 235.7461 1957.6357 234.0117 1953.5918 234.0117 C1872.9771 234.0107 Lf1890.8877 3404.3647 m1888.6406 3404.3647 1886.502 3405.3286 1885.0127 3407.0117 c1883.5244 3408.6948 1882.8296 3410.9355 1883.104 3413.1655 C1889.416 3464.4131 L1882.8232 3470.6426 1879.001 3479.2773 1879.001 3488.3159 c1879.001 3506.6836 1894.3799 3521.6279 1913.2832 3521.6284 c1932.187 3521.6284 1947.5654 3506.6855 1947.5654 3488.3169 c1947.5654 3479.2783 1943.7437 3470.644 1937.1519 3464.4141 C1943.4634 3413.1665 L1943.7383 3410.936 1943.043 3408.6953 1941.5547 3407.0127 c1940.0664 3405.3291 1937.9272 3404.3657 1935.6802 3404.3657 C1890.8877 3404.3647 Lf2508.125 3404.3647 m2505.8789 3404.3647 2503.7402 3405.3286 2502.25 3407.0117 c2500.7617 3408.6948 2500.0674 3410.9355 2500.3418 3413.1655 C2506.6543 3464.4131 L2500.0605 3470.6426 2496.2383 3479.2773 2496.2383 3488.3159 c2496.2383 3506.6836 2511.6172 3521.6279 2530.5215 3521.6284 c2549.4248 3521.6284 2564.8027 3506.6855 2564.8027 3488.3169 c2564.8027 3479.2783 2560.9814 3470.644 2554.3896 3464.4141 C2560.7012 3413.1665 L2560.9766 3410.936 2560.2813 3408.6953 2558.793 3407.0127 c2557.3047 3405.3291 2555.165 3404.3657 2552.918 3404.3657 C2508.125 3404.3647 Lf2482.4814 234.0107 m2478.4365 234.0107 2474.5879 235.7451 2471.9092 238.7744 c2469.2295 241.8037 2467.9795 245.8359 2468.4736 249.8496 C2479.833 342.082 L2467.9678 353.2939 2461.0879 368.833 2461.0879 385.1006 c2461.0879 418.1572 2488.7656 445.0527 2522.7861 445.0537 c2556.8076 445.0537 2584.4863 418.1602 2584.4863 385.1016 c2584.4863 368.8359 2577.6064 353.2949 2565.7432 342.083 C2577.1025 249.8506 L2577.5967 245.8369 2576.3467 241.8037 2573.667 238.7754 c2570.9883 235.7461 2567.1396 234.0117 2563.0947 234.0117 C2482.4814 234.0107 Lf0 XR543.8013 371.6914 m543.1841 368.7754 541.1548 365.8809 538.5845 362.2188 c535.3931 357.6699 531.4214 352.0078 529.6606 344.7363 c526.7134 332.5723 527.6997 318.7266 528.7407 304.0664 c529.6958 290.6309 530.7798 275.4043 527.6421 266.7305 c524.3188 257.543 513.979 253.4297 505.2046 253.4297 C505.2017 253.4297 L501.3579 253.4297 488.4673 254.3887 484.0044 266.7305 c480.2036 277.2402 481.3491 290.3457 482.561 304.2227 c483.6802 317.0293 484.8364 330.2715 482.0884 343.0352 c480.1157 352.1914 475.3813 359.1055 471.5767 364.6602 c470.1899 366.6875 468.0923 369.75 467.7583 370.8242 C465.0493 382.3828 466.9771 393.6699 473.186 402.6055 c478.9321 410.8711 488.0005 416.3945 498.7212 418.1563 c501.4185 418.5996 504.1177 418.8242 506.7407 418.8242 c518.813 418.8242 529.3677 414.2188 536.4585 405.8535 c543.981 396.9805 546.5884 384.8477 543.8013 371.6914 cf1093.4727 371.6914 m1092.8555 368.7754 1090.8262 365.8809 1088.2559 362.2188 c1085.0645 357.6699 1081.0928 352.0078 1079.332 344.7363 c1076.3848 332.5723 1077.3711 318.7266 1078.4121 304.0664 c1079.3672 290.6309 1080.4512 275.4043 1077.3135 266.7305 c1073.9902 257.543 1063.6504 253.4297 1054.876 253.4297 C1054.873 253.4297 L1051.0293 253.4297 1038.1387 254.3887 1033.6758 266.7305 c1029.875 277.2402 1031.0205 290.3457 1032.2324 304.2227 c1033.3516 317.0293 1034.5078 330.2715 1031.7598 343.0352 c1029.7871 352.1914 1025.0527 359.1055 1021.248 364.6602 c1019.8613 366.6875 1017.7637 369.75 1017.4297 370.8242 C1014.7207 382.3828 1016.6484 393.6699 1022.8574 402.6055 c1028.6035 410.8711 1037.6719 416.3945 1048.3926 418.1563 c1051.0898 418.5996 1053.7891 418.8242 1056.4121 418.8242 c1068.4844 418.8242 1079.0391 414.2188 1086.1299 405.8535 c1093.6523 396.9805 1096.2598 384.8477 1093.4727 371.6914 cf1 XR549.1152 1165.1484 m549.1152 1188.2324 529.689 1206.9443 505.7256 1206.9443 c481.7622 1206.9434 462.3359 1188.2314 462.3359 1165.1475 c462.3359 1151.2588 469.3735 1138.96 480.1953 1131.3594 C468.9731 1040.248 L542.48 1040.248 L531.2583 1131.3594 L542.0786 1138.9609 549.1152 1151.2598 549.1152 1165.1484 cf1098.7866 1165.1484 m1098.7866 1188.2324 1079.3604 1206.9443 1055.397 1206.9443 c1031.4336 1206.9434 1012.0073 1188.2314 1012.0073 1165.1475 c1012.0073 1151.2588 1019.0449 1138.96 1029.8667 1131.3594 C1018.6445 1040.248 L1092.1514 1040.248 L1080.9297 1131.3594 L1091.75 1138.9609 1098.7866 1151.2598 1098.7866 1165.1484 cf1913.2832 2652.4531 m1902.1035 2652.4531 1891.5918 2656.8076 1883.6865 2664.7129 c1875.7813 2672.6182 1871.4272 2683.1299 1871.4272 2694.3096 c1871.4272 2704.3877 1875.0781 2714.0288 1881.499 2721.5356 C1880.6152 2724.5454 1880.1611 2727.6895 1880.1611 2730.8945 c1880.1611 2749.1587 1895.0195 2764.0166 1913.2832 2764.0166 c1922.1304 2764.0166 1930.4482 2760.5713 1936.7041 2754.3154 c1942.96 2748.0596 1946.4053 2739.7422 1946.4053 2730.8945 c1946.4053 2727.689 1945.9517 2724.5454 1945.0669 2721.5356 C1951.4883 2714.0288 1955.1392 2704.3877 1955.1392 2694.3096 c1955.1392 2683.1294 1950.7856 2672.6182 1942.8799 2664.7129 c1934.9746 2656.8076 1924.4634 2652.4531 1913.2832 2652.4531 C1913.2832 2652.4531 Lf2530.5195 2652.4531 m2519.3398 2652.4531 2508.8281 2656.8076 2500.9219 2664.7129 c2493.0176 2672.6182 2488.6631 2683.1299 2488.6631 2694.3096 c2488.6631 2704.3877 2492.3145 2714.0288 2498.7344 2721.5356 C2497.8516 2724.5454 2497.3965 2727.6895 2497.3965 2730.8945 c2497.3965 2749.1587 2512.2559 2764.0166 2530.5195 2764.0166 c2539.3662 2764.0166 2547.6836 2760.5713 2553.9395 2754.3154 c2560.1953 2748.0596 2563.6406 2739.7422 2563.6406 2730.8945 c2563.6406 2727.689 2563.1875 2724.5454 2562.3027 2721.5356 C2568.7246 2714.0288 2572.375 2704.3877 2572.375 2694.3096 c2572.375 2683.1294 2568.0215 2672.6182 2560.1152 2664.7129 c2552.2109 2656.8076 2541.6992 2652.4531 2530.5195 2652.4531 C2530.5195 2652.4531 Lf1081.6138 1956.9307 m1085.375 1962.1992 1087.5889 1968.6484 1087.5889 1975.6152 c1087.5889 1993.3945 1073.1763 2007.8076 1055.397 2007.8076 c1037.6177 2007.8076 1023.2051 1993.3945 1023.2051 1975.6152 c1023.2051 1968.6484 1025.4185 1962.1992 1029.1802 1956.9297 C1017.4897 1948.6855 1009.853 1935.0781 1009.853 1919.6855 c1009.853 1894.5332 1030.2437 1874.1426 1055.397 1874.1426 c1080.5503 1874.1426 1100.9409 1894.5332 1100.9409 1919.6855 c1100.9409 1935.0781 1093.3042 1948.6865 1081.6138 1956.9307 Cf531.9424 1956.9307 m535.7036 1962.1992 537.9175 1968.6484 537.9175 1975.6152 c537.9175 1993.3945 523.5049 2007.8076 505.7256 2007.8076 c487.9463 2007.8076 473.5337 1993.3945 473.5337 1975.6152 c473.5337 1968.6484 475.7471 1962.1992 479.5088 1956.9297 C467.8184 1948.6855 460.1816 1935.0781 460.1816 1919.6855 c460.1816 1894.5332 480.5723 1874.1426 505.7256 1874.1426 c530.8789 1874.1426 551.2695 1894.5332 551.2695 1919.6855 c551.2695 1935.0781 543.6328 1948.6865 531.9424 1956.9307 Cf1095.1016 3470.0522 m1095.1016 3493.0425 1075.7539 3511.6792 1051.8872 3511.6792 c1028.0205 3511.6792 1008.6729 3493.0415 1008.6729 3470.0513 c1008.6729 3456.2188 1015.6826 3443.9702 1026.46 3436.4004 C1015.2837 3390.875 L1088.4932 3390.876 L1077.3164 3436.4009 L1088.0933 3443.9712 1095.1016 3456.2202 1095.1016 3470.0522 cf547.856 3470.0522 m547.856 3493.0425 528.5083 3511.6792 504.6416 3511.6792 c480.7749 3511.6792 461.4272 3493.0415 461.4272 3470.0513 c461.4272 3456.2188 468.437 3443.9702 479.2144 3436.4004 C468.0381 3390.875 L541.2476 3390.876 L530.0708 3436.4009 L540.8477 3443.9712 547.856 3456.2202 547.856 3470.0522 cf2583.9395 1942.6504 m2583.9395 1965.6406 2564.5918 1984.2769 2540.7246 1984.2769 c2516.8594 1984.2769 2497.5117 1965.6387 2497.5117 1942.6484 c2497.5117 1928.8164 2504.5215 1916.5684 2515.2988 1908.998 C2504.1211 1863.4727 L2577.332 1863.4736 L2566.1543 1908.998 L2576.9316 1916.5684 2583.9395 1928.8184 2583.9395 1942.6504 cf1957.8564 1942.6504 m1957.8564 1965.6406 1938.5088 1984.2769 1914.6421 1984.2769 c1890.7754 1984.2769 1871.4277 1965.6387 1871.4277 1942.6484 c1871.4277 1928.8164 1878.4375 1916.5684 1889.2148 1908.998 C1878.0386 1863.4727 L1951.248 1863.4736 L1940.0713 1908.998 L1950.8481 1916.5684 1957.8564 1928.8184 1957.8564 1942.6504 cfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF